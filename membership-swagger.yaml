openapi: 3.0.3
info:
  title: Membership API
  contact: {}
  version: "0.1.0"

servers:
- url: http://localhost:8080
  description: Local server

paths:
  /_info:
    get:
      summary: Get server info
      operationId: getServerInfo
      responses:
        200:
          description: Server information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInfo"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations:
    get:
      summary: List organizations of the connected user
      operationId: listOrganizations
      parameters:
      - name: expand
        in: query
        schema:
          type: boolean
        required: false
      responses:
        200:
          description: List of organizations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationExpandedResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
      responses:
        201:
          description: Organization created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /organizations/expanded:
    get:
      summary: List organizations of the connected user with expanded data
      operationId: listOrganizationsExpanded
      deprecated: true
      responses:
        200:
          description: List of organizations with expanded data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationExpandedResponse"
  /organizations/{organizationId}:
    get:
      summary: Read organization
      operationId: readOrganization
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: expand
        in: query
        schema:
          type: boolean
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadOrganizationResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      summary: Update organization
      operationId: updateOrganization
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationData"
      responses:
        200:
          description: Organization updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadOrganizationResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete organization
      operationId: deleteOrganization
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Organization deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/authentication-provider:
    get:
      summary: Read authentication provider
      operationId: readAuthenticationProvider
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Authentication provider details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationProviderResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Upsert an authentication provider
      operationId: upsertAuthenticationProvider
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertAuthenticationProviderRequest"
      responses:
        200:
          description: Authentication provider created or updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationProviderResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete authentication provider
      operationId: deleteAuthenticationProvider
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Authentication provider deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /organizations/{organizationId}/features:
    get:
      summary: List features
      operationId: listFeatures
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: List of features
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrganizationFeature"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add Features
      operationId: addFeatures
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - features
              properties:
                features:
                  type: array
                  items:
                    type: string
      responses:
        204:
          description: Features added
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/features/{name}:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true
    - name: name
      in: path
      schema:
        type: string
      required: true
    delete:
      summary: Delete feature
      operationId: deleteFeature
      responses:
        204:
          description: Feature deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/client:
    get:
      summary: Read organization client (DEPRECATED) (until 12/31/2025)
      operationId: readOrganizationClient
      deprecated: true
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Organization client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationClientResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Create organization client (DEPRECATED) (until 12/31/2025)
      operationId: createOrganizationClient
      deprecated: true
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        201:
          description: Client organization created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationClientResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete organization client (DEPRECATED) (until 12/31/2025)
      operationId: deleteOrganizationClient
      deprecated: true
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Client deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/clients:
    get:
      summary: Read organization clients
      operationId: organizationClientsRead
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: cursor
        in: query
        schema:
          type: string
      - name: pageSize
        in: query
        schema:
          type: integer
          minimum: 1
      responses:
        200:
          description: Organization client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadOrganizationClientsResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create organization client
      operationId: organizationClientCreate
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationClientRequest"
      responses:
        201:
          description: Organization client created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationClientResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/clients/{clientId}:
    get:
      summary: Read organization client
      operationId: organizationClientRead
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: clientId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Organization client details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadOrganizationClientResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete organization client
      operationId: organizationClientDelete
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: clientId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Client deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/logs:
    get:
      summary: List logs
      operationId: listLogs
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: query
        schema:
          type: string
        required: false
      - name: cursor
        in: query
        schema:
          type: string
        required: false
      - name: pageSize
        in: query
        schema:
          type: integer
          minimum: 1
        required: false
      - name: action
        in: query
        schema:
          $ref: "#/components/schemas/Action"
        required: false
      - name: userId
        in: query
        schema:
          type: string
        required: false
      - name: key
        in: query
        schema:
          type: string
        required: false
      - name: value
        in: query
        schema:
          type: string
        required: false
      responses:
        200:
          description: Cursor of logs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogCursor"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/users:
    get:
      summary: List users of organization
      operationId: listUsersOfOrganization
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: List of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/users/{userId}:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true
    - name: userId
      in: path
      schema:
        type: string
      required: true
    get:
      summary: Read user of organization
      operationId: readUserOfOrganization
      responses:
        200:
          description: Read a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadOrganizationUserResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update user within an organization
      operationId: upsertOrganizationUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationUserRequest"
      responses:
        204:
          description: Updated user
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: delete user from organization
      operationId: deleteUserFromOrganization
      description: |
        The owner of the organization can remove anyone while each user can leave any organization where it is not owner.
      responses:
        204:
          description: User deleted from organization
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks:
    get:
      summary: List stacks
      operationId: listStacks
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: all
        in: query
        description: Include deleted and disabled stacks
        schema:
          type: boolean
        required: false
      - name: deleted
        in: query
        description: Include deleted stacks
        deprecated: true
        schema:
          type: boolean
        required: false
      responses:
        200:
          description: List of stacks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStacksResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create stack
      operationId: createStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStackRequest"
      responses:
        202:
          description: Stack created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStackResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/modules:
    get:
      summary: List modules of a stack
      operationId: listModules
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: List of modules
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListModulesResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: enable module
      operationId: enableModule
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      - name: name
        in: query
        schema:
          type: string
        required: true
      responses:
        202:
          description: Module enabled
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: disable module
      operationId: disableModule
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      - name: name
        in: query
        schema:
          type: string
        required: true
      responses:
        202:
          description: Module disabled
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /organizations/{organizationId}/stacks/{stackId}/upgrade:
    put:
      summary: Upgrade stack
      operationId: upgradeStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StackVersion"
      responses:
        202:
          description: Stack upgrade accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}:
    get:
      summary: Find stack
      operationId: getStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadStackResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update stack
      operationId: updateStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStackRequest"
      responses:
        200:
          description: Updated stack
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadStackResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Delete stack
      operationId: deleteStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      - name: force
        in: query
        schema:
          type: boolean
        required: false
      responses:
        204:
          description: Stack deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/users:
    get:
      summary: List stack users accesses within an organization
      operationId: listStackUsersAccesses
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Stack users access role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StackUserAccessResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/users/{userId}:
    get:
      summary: Read stack user access role within an organization
      operationId: readStackUserAccess
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      - name: userId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Stack user access role
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadStackUserAccess"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete stack user access role within an organization
      operationId: deleteStackUserAccess
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      - name: userId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Updated user
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update stack user access role within an organization
      operationId: upsertStackUserAccess
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      - name: userId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStackUserRequest"
      responses:
        204:
          description: Updated user
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/disable:
    put:
      summary: Disable stack
      operationId: disableStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        202:
          description: Stack disabled
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/enable:
    put:
      summary: Enable stack
      operationId: enableStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        202:
          description: Stack enabled
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/restore:
    put:
      summary: Restore stack
      operationId: restoreStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        202:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadStackResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/stargate/enable:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true
    - name: stackId
      in: path
      schema:
        type: string
      required: true
    put:
      summary: Enable stargate on a stack
      operationId: enableStargate
      responses:
        202:
          description: OK
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/stacks/{stackId}/stargate/disable:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true
    - name: stackId
      in: path
      schema:
        type: string
      required: true
    put:
      summary: Disable stargate on a stack
      operationId: disableStargate
      responses:
        202:
          description: OK
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /me/invitations:
    get:
      summary: List invitations of the user
      operationId: listInvitations
      parameters:
      - in: query
        name: status
        required: false
        description: Status of organizations
        schema:
          type: string
      - in: query
        name: organization
        required: false
        description: Status of organizations
        schema:
          type: string
      responses:
        200:
          description: List of the invitations for the connected user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInvitationsResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /me/invitations/{invitationId}/accept:
    post:
      summary: Accept invitation
      operationId: acceptInvitation
      parameters:
      - name: invitationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Invitation accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /me/invitations/{invitationId}/reject:
    post:
      summary: Decline invitation
      operationId: declineInvitation
      parameters:
      - name: invitationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Invitation declined
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/invitations:
    get:
      summary: List invitations of the organization
      operationId: listOrganizationInvitations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - in: query
        name: status
        required: false
        description: Status of organizations
        schema:
          type: string
      responses:
        200:
          description: List of the invitations for the organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInvitationsResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create invitation
      operationId: createInvitation
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: email
        in: query
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvitationClaim"
      responses:
        200:
          description: Invitation already sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInvitationResponse"
        201:
          description: Invitation created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInvitationResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/invitations/{invitationId}:
    delete:
      summary: Delete invitation
      operationId: deleteInvitation
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: invitationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Invitation deleted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/regions:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true

    get:
      summary: List regions
      operationId: listRegions
      responses:
        200:
          description: List of the regions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegionsResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a private region
      operationId: createPrivateRegion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePrivateRegionRequest"
      responses:
        200:
          description: Created region
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatedPrivateRegionResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/regions/{regionID}:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true
    - name: regionID
      in: path
      schema:
        type: string
      required: true
    get:
      summary: Get region
      operationId: getRegion
      responses:
        200:
          description: Get a specific region
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRegionResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete region
      operationId: deleteRegion
      responses:
        204:
          description: Delete a specific region
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /organizations/{organizationId}/regions/{regionID}/versions:
    parameters:
    - name: organizationId
      in: path
      schema:
        type: string
      required: true
    - name: regionID
      in: path
      schema:
        type: string
      required: true
    get:
      summary: Get region versions
      operationId: getRegionVersions
      responses:
        200:
          description: Get a specific region
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRegionVersionsResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /me:
    get:
      summary: Read user
      operationId: readConnectedUser
      responses:
        200:
          description: Read a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadUserResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
security:
- oauth2: []

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /authorize
          tokenUrl: /oauth/token
          scopes:
            openid: Enable OIDC
            email: Ask email access
  schemas:
    Module:
      type: object
      required:
      - name
      - state
      - status
      - lastStatusUpdate
      - lastStateUpdate
      properties:
        name:
          type: string
        state:
          type: string
          enum:
          - ENABLED
          - DISABLED
        status:
          type: string
          enum:
          - UNKNOWN
          - PROGRESSING
          - READY
          - DELETED
        lastStatusUpdate:
          type: string
          format: date-time
        lastStateUpdate:
          type: string
          format: date-time
        clusterStatus:
          type: object

    ListModulesResponse:
      type: object
      required:
      - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Module"
    Action:
      type: string
      enum:
      - agents.connected
      - agents.disconnected
      - invitations.created
      - invitations.accepted
      - invitations.rejected
      - invitations.cancelled
      - organizations.created
      - organizations.updated
      - organizations.deleted
      - organizations.user.deleted
      - organizations.user.updated
      - regions.created
      - regions.deleted
      - users.created
      - users.deleted
      - stacks.disposal
      - stacks.disposal-reset
      - stacks.warned
      - stacks.pruned
      - stacks.status.updated
      - stacks.created
      - stacks.updated
      - stacks.deleted
      - stacks.restored
      - stacks.disabled
      - stacks.enabled
      - stacks.upgraded
      - stacks.stargate.enabled
      - stacks.stargate.disabled
      - stacks.user.updated
      - stacks.user.deleted
      - stacks.reachness.updated
      - stacks.module.enabled
      - stacks.module.disabled
      - stacks.module.status.updated
    LogCursor:
      properties:
        data:
          allOf:
          - $ref: "#/components/schemas/Cursor"
          - type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Log"
      required:
      - data
    Log:
      type: object
      required:
      - seq
      - organizationId
      - userId
      - action
      - date
      - data
      properties:
        seq:
          type: string
          example: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
        organizationId:
          type: string
        userId:
          type: string
        action:
          type: string
        date:
          type: string
          format: date-time
        data:
          type: object
    Cursor:
      type: object
      required:
      - pageSize
      - hasMore
      - data
      properties:
        pageSize:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
          example: 15
        hasMore:
          type: boolean
          example: false
        previous:
          type: string
          example: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
        next:
          type: string
          example: ""
    OrganizationFeature:
      type: object
      required:
      - name
      - organizationID
      - createdAt
      properties:
        organizationID:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
    CreatePrivateRegionRequest:
      type: object
      properties:
        name:
          type: string
      required:
      - name
    CreatedPrivateRegionResponse:
      properties:
        data:
          $ref: "#/components/schemas/PrivateRegion"
      required:
      - data
    PrivateRegion:
      allOf:
      - $ref: "#/components/schemas/Region"
      - type: object
        properties:
          organizationID:
            type: string
          creatorID:
            type: string
          secret:
            $ref: "#/components/schemas/PrivateRegionSecret"
        required:
        - organizationID
        - creatorID
    PublicRegion:
      allOf:
      - $ref: "#/components/schemas/Region"
      - type: object
        properties:
          production:
            type: boolean
        required:
        - production
    AnyRegion:
      allOf:
      - $ref: "#/components/schemas/Region"
      - type: object
        properties:
          clientID:
            type: string
          organizationID:
            type: string
          creator:
            $ref: "#/components/schemas/User"
          production:
            type: boolean
          public:
            type: boolean
          version:
            type: string
          agentID:
            type: string
          outdated:
            type: boolean
          secret:
            $ref: "#/components/schemas/PrivateRegionSecret"

        required:
        - public
        - agentID
        - outdated
    PrivateRegionSecret:
      type: object
      required:
      - lastDigits
      properties:
        lastDigits:
          type: string
        clear:
          type: string
    OrganizationData:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          description: Organization name
        defaultOrganizationAccess:
          $ref: "#/components/schemas/Role"
        defaultStackAccess:
          $ref: "#/components/schemas/Role"
        domain:
          type: string
          description: Organization domain
    CreateOrganizationClientRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the client
    CreateOrganizationClientResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: "#/components/schemas/OrganizationClient"
    ReadOrganizationClientResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: "#/components/schemas/OrganizationClient"
    ReadOrganizationClientsResponse:
      type: object
      required:
      - data
      properties:
        data:
          allOf:
          - $ref: "#/components/schemas/Cursor"
          - type: object
            required:
            - data
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationClient"
    OrganizationClient:
      type: object
      required:
      - id
      - secret
      - createdAt
      - description
      properties:
        id:
          type: string
          description: Organization ID
        secret:
          type: object
          required:
          - lastDigits
          properties:
            lastDigits:
              type: string
            clear:
              type: string
        description:
          type: string
          description: Description of the client
        createdAt:
          type: string
          format: date-time
    Organization:
      allOf:
      - $ref: "#/components/schemas/OrganizationData"
      - type: object
        required:
        - id
        - ownerId
        properties:
          id:
            type: string
            description: Organization ID
          ownerId:
            type: string
            description: Owner ID
          availableStacks:
            type: integer
            description: Number of available stacks
          availableSandboxes:
            type: integer
            description: Number of available sandboxes
          createdAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
    StackData:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          description: Stack name
        metadata:
          type: object
          additionalProperties:
            type: string
    StackVersion:
      type: object
      properties:
        version:
          type: string
          description: Supported only with agent version >= v0.7.0
    StackLifeCycle:
      type: object
      required:
      - status
      - state
      - expectedStatus
      - lastStateUpdate
      - lastExpectedStatusUpdate
      - lastStatusUpdate
      properties:
        status:
          type: string
          enum:
          - UNKNOWN
          - PROGRESSING
          - READY
          - DISABLED
          - DELETED
        state:
          type: string
          enum:
          - ACTIVE
          - DISABLED
          - DELETED
        expectedStatus:
          type: string
          enum:
          - READY
          - DISABLED
          - DELETED
        lastStateUpdate:
          type: string
          format: date-time
        lastExpectedStatusUpdate:
          type: string
          format: date-time
        lastStatusUpdate:
          type: string
          format: date-time
        warnedAt:
          type: string
          format: date-time
        disposableSince:
          type: string
          format: date-time

    StackReachability:
      properties:
        reachable:
          description: Stack is reachable through Stargate
          type: boolean
        lastReachableUpdate:
          description: Last time the stack was reachable
          format: date-time
          type: string
      required:
      - reachable
      type: object
    Stack:
      allOf:
      - $ref: "#/components/schemas/StackData"
      - $ref: "#/components/schemas/StackVersion"
      - $ref: "#/components/schemas/StackLifeCycle"
      - $ref: "#/components/schemas/StackReachability"
      - type: object
        required:
        - id
        - organizationId
        - uri
        - regionID
        - stargateEnabled
        - synchronised
        - modules
        properties:
          id:
            type: string
            description: Stack ID
          organizationId:
            type: string
            description: Organization ID
          uri:
            type: string
            description: Base stack uri
          regionID:
            type: string
            description: The region where the stack is installed
          region:
            $ref: "#/components/schemas/Region"
          stargateEnabled:
            type: boolean
          createdAt:
            type: string
            format: date-time
          deletedAt:
            type: string
            format: date-time
          disabledAt:
            type: string
            format: date-time
          auditEnabled:
            type: boolean
          synchronised:
            type: boolean
          updatedAt:
            type: string
            format: date-time
          modules:
            type: array
            items:
              $ref: "#/components/schemas/Module"

    UserData:
      allOf:
      - type: object
        properties:
          email:
            type: string
        required:
        - email
    Role:
      type: string
      enum:
      - NONE
      - ADMIN
      - GUEST
    SystemRole:
      type: string
      enum:
      - USER
      - SYSTEM
    User:
      allOf:
      - $ref: "#/components/schemas/UserData"
      - type: object
        required:
        - id
        properties:
          id:
            type: string
            description: User ID
      - type: object
        properties:
          role:
            $ref: "#/components/schemas/SystemRole"
    OrganizationUserArray:
      type: array
      items:
        allOf:
        - $ref: "#/components/schemas/OrganizationUser"
    ReadOrganizationUserResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/OrganizationUser"
    OrganizationUser:
      allOf:
      - type: object
        required:
        - role
        - email
        - id
        properties:
          role:
            $ref: "#/components/schemas/Role"
          email:
            type: string
          id:
            type: string

    OrganizationArray:
      type: array
      items:
        $ref: "#/components/schemas/Organization"
    StackArray:
      type: array
      items:
        $ref: "#/components/schemas/Stack"
    UserArray:
      type: array
      items:
        $ref: "#/components/schemas/User"
    ReadStackUserAccess:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/StackUserAccess"
    StackUserAccess:
      allOf:
      - type: object
        required:
        - stackId
        - userId
        - email
        - role
        properties:
          stackId:
            type: string
            description: Stack ID
          userId:
            type: string
            description: User ID
          email:
            type: string
            description: User email
          role:
            $ref: "#/components/schemas/Role"
    StackUserAccessResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/StackUserAccessArray"
    StackUserAccessArray:
      type: array
      items:
        $ref: "#/components/schemas/StackUserAccess"
    ListOrganizationResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/OrganizationArray"
    CreateOrganizationRequest:
      $ref: "#/components/schemas/OrganizationData"
    CreateOrganizationResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/OrganizationExpanded"
    ReadOrganizationResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/OrganizationExpanded"
    ListStacksResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/StackArray"
    ListUsersResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/OrganizationUserArray"
    CreateStackRequest:
      allOf:
      - $ref: "#/components/schemas/StackData"
      - $ref: "#/components/schemas/StackVersion"
      - type: object
        properties:
          regionID:
            type: string
        required:
        - regionID
    UpdateStackRequest:
      allOf:
      - $ref: "#/components/schemas/StackData"
    CreateStackResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Stack"
    ReadStackResponse:
      $ref: "#/components/schemas/CreateStackResponse"
    ReadUserResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/User"
    ListInvitationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Invitation"
    CreateInvitationResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Invitation"
    Error:
      type: object
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
      required:
      - errorCode
    Invitation:
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        userEmail:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - ACCEPTED
          - REJECTED
          - CANCELLED
        creationDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-tim
        role:
          $ref: "#/components/schemas/Role"
        userId:
          type: string
        organizationAccess:
          $ref: "#/components/schemas/OrganizationUser"
        expiresAt:
          type: string
          format: date-time
        creatorId:
          type: string
        lastUpdate:
          type: string
          format: date-time
      required:
      - creationDate
      - status
      - role
      - creatorID
      - userEmail
      - organizationId
      - id
    InvitationClaim:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/Role"
    Region:
      type: object
      required:
      - id
      - baseUrl
      - active
      - createdAt
      - name
      - capabilities
      - agentID
      - outdated
      properties:
        id:
          type: string
        baseUrl:
          type: string
        createdAt:
          type: string
          format: datetime
        active:
          type: boolean
        lastPing:
          type: string
          format: date-time
        name:
          type: string
        capabilities:
          $ref: "#/components/schemas/RegionCapability"
        agentID:
          type: string
        outdated:
          type: boolean
        creatorId:
          type: string
        version:
          type: string

    RegionCapability:
      type: object
      properties:
        MODULE_LIST:
          type: array
          items:
            type: string
        EE:
          type: array
          items:
            type: string
    RegionCapabilityKeys:
      type: string
      enum:
      - MODULE_LIST
      - EE
    ListOrganizationExpandedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/OrganizationExpanded"
    OrganizationExpanded:
      allOf:
      - $ref: "#/components/schemas/Organization"
      - type: object
        properties:
          totalStacks:
            type: integer
          totalUsers:
            type: integer
          owner:
            $ref: "#/components/schemas/User"
    ListRegionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AnyRegion"
      required:
      - data
    GetRegionResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/AnyRegion"
      required:
      - data

    ServerInfo:
      type: object
      required:
      - version
      properties:
        version:
          type: string
        capabilities:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/Capability"
        consoleURL:
          type: string
    Capability:
      type: string
      enum:
      - MODULE_SELECTION
    Version:
      type: object
      required:
      - name
      - versions
      - regionID
      properties:
        name:
          type: string
        versions:
          type: object
          additionalProperties:
            type: string
        regionID:
          type: string
    UpdateOrganizationUserRequest:
      type: object
      required:
      - role
      properties:
        role:
          $ref: "#/components/schemas/Role"
    UpdateStackUserRequest:
      type: object
      required:
      - role
      properties:
        role:
          $ref: "#/components/schemas/Role"

    GetRegionVersionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Version"
      required:
      - data

    AuthenticationProviderData:
      type: object
      oneOf:
      - $ref: '#/components/schemas/GoogleIDPConfig'
      - $ref: '#/components/schemas/MicrosoftIDPConfig'
      - $ref: '#/components/schemas/GithubIDPConfig'
      - $ref: '#/components/schemas/OIDCConfig'

    BaseProviderConfig:
      type: object
      required:
      - type
      - name
      - clientID
      - clientSecret
      properties:
        type:
          type: string
          enum:
          - oidc
          - google
          - github
          - microsoft
          description: Type of the authentication provider
        name:
          type: string
          description: Name of the authentication provider
        clientID:
          type: string
          description: Client ID for the authentication provider
        clientSecret:
          type: string
          description: Client secret for the authentication provider

    AuthenticationProvider:
      type: object
      allOf:
      - $ref: '#/components/schemas/AuthenticationProviderData'
      - type: object
        properties:
          organizationId:
            type: string
            description: Unique identifier for the authentication provider
          createdAt:
            type: string
            format: date-time
            description: Creation date of the authentication provider
          updatedAt:
            type: string
            format: date-time
            description: Last update date of the authentication provider
        required:
        - organizationId
        - createdAt
        - updatedAt

    GoogleIDPConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - type: object
        required:
        - config
        properties:
          config:
            type: object
            additionalProperties: false

    MicrosoftIDPConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - type: object
        required:
        - config
        properties:
          config:
            type: object
            properties:
              tenant:
                type: string
                description: Tenant ID for Microsoft authentication
                default: 'common'

    GithubIDPConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - type: object
        required:
        - config
        properties:
          config:
            type: object
            additionalProperties: false

    OIDCConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - type: object
        required:
        - config
        properties:
          config:
            type: object
            required:
            - issuer
            properties:
              issuer:
                type: string
                description: OIDC issuer URL
              discoveryPath:
                type: string
                default: '/.well-known/openid-configuration'

    UpsertAuthenticationProviderRequest:
      $ref: "#/components/schemas/AuthenticationProviderData"

    AuthenticationProviderResponse:
      type: object
      properties:
        data:
          allOf:
          - $ref: "#/components/schemas/AuthenticationProvider"
          - type: object
            properties:
              redirectURI:
                type: string
            required:
            - redirectURI
