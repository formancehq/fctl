// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ListVersionsResponseData struct {
	// Current page number
	CurrentPage *int64 `json:"currentPage,omitempty"`
	// Previous page number
	PreviousPage *int64 `json:"previousPage,omitempty"`
	// Next page number
	NextPage *int64 `json:"nextPage,omitempty"`
	// Total number of pages
	TotalPages *int64 `json:"totalPages,omitempty"`
	// Total number of items
	TotalCount *int64                 `json:"totalCount,omitempty"`
	Items      []ConfigurationVersion `json:"items"`
}

func (o *ListVersionsResponseData) GetCurrentPage() *int64 {
	if o == nil {
		return nil
	}
	return o.CurrentPage
}

func (o *ListVersionsResponseData) GetPreviousPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PreviousPage
}

func (o *ListVersionsResponseData) GetNextPage() *int64 {
	if o == nil {
		return nil
	}
	return o.NextPage
}

func (o *ListVersionsResponseData) GetTotalPages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalPages
}

func (o *ListVersionsResponseData) GetTotalCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalCount
}

func (o *ListVersionsResponseData) GetItems() []ConfigurationVersion {
	if o == nil {
		return []ConfigurationVersion{}
	}
	return o.Items
}

type ListVersionsResponse struct {
	Data ListVersionsResponseData `json:"data"`
}

func (o *ListVersionsResponse) GetData() ListVersionsResponseData {
	if o == nil {
		return ListVersionsResponseData{}
	}
	return o.Data
}
