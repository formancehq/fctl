// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/formancehq/fctl/internal/deployserverclient/internal/utils"
	"time"
)

type Run struct {
	// Unique identifier for the run
	ID string `json:"id"`
	// Whether the run was auto-applied
	AutoApply bool `json:"autoApply"`
	// Timestamp when the run was created
	CreatedAt time.Time `json:"createdAt"`
	// Whether the run is a destroy operation
	IsDestroy bool `json:"isDestroy"`
	// Whether the run has changes
	HasChanges bool `json:"hasChanges"`
	// Message associated with the run
	Message string `json:"message"`
	// Whether the run is a plan-only operation
	PlanOnly bool `json:"planOnly"`
	// Whether the run is a refresh operation
	Refresh bool `json:"refresh"`
	// Whether the run is a refresh-only operation
	RefreshOnly bool `json:"refreshOnly"`
	// Whether the run saves the plan
	SavePlan bool `json:"savePlan"`
	// Status of the run
	Status               string                `json:"status"`
	ConfigurationVersion *ConfigurationVersion `json:"configurationVersion,omitempty"`
}

func (r Run) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *Run) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Run) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Run) GetAutoApply() bool {
	if o == nil {
		return false
	}
	return o.AutoApply
}

func (o *Run) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Run) GetIsDestroy() bool {
	if o == nil {
		return false
	}
	return o.IsDestroy
}

func (o *Run) GetHasChanges() bool {
	if o == nil {
		return false
	}
	return o.HasChanges
}

func (o *Run) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *Run) GetPlanOnly() bool {
	if o == nil {
		return false
	}
	return o.PlanOnly
}

func (o *Run) GetRefresh() bool {
	if o == nil {
		return false
	}
	return o.Refresh
}

func (o *Run) GetRefreshOnly() bool {
	if o == nil {
		return false
	}
	return o.RefreshOnly
}

func (o *Run) GetSavePlan() bool {
	if o == nil {
		return false
	}
	return o.SavePlan
}

func (o *Run) GetStatus() string {
	if o == nil {
		return ""
	}
	return o.Status
}

func (o *Run) GetConfigurationVersion() *ConfigurationVersion {
	if o == nil {
		return nil
	}
	return o.ConfigurationVersion
}
