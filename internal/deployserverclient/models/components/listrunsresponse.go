// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type ListRunsResponseData struct {
	// Current page number
	CurrentPage *int64 `json:"currentPage,omitempty"`
	// Previous page number
	PreviousPage *int64 `json:"previousPage,omitempty"`
	// Next page number
	NextPage *int64 `json:"nextPage,omitempty"`
	// Total number of pages
	TotalPages *int64 `json:"totalPages,omitempty"`
	// Total number of items
	TotalCount *int64 `json:"totalCount,omitempty"`
	Items      []Run  `json:"items"`
}

func (o *ListRunsResponseData) GetCurrentPage() *int64 {
	if o == nil {
		return nil
	}
	return o.CurrentPage
}

func (o *ListRunsResponseData) GetPreviousPage() *int64 {
	if o == nil {
		return nil
	}
	return o.PreviousPage
}

func (o *ListRunsResponseData) GetNextPage() *int64 {
	if o == nil {
		return nil
	}
	return o.NextPage
}

func (o *ListRunsResponseData) GetTotalPages() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalPages
}

func (o *ListRunsResponseData) GetTotalCount() *int64 {
	if o == nil {
		return nil
	}
	return o.TotalCount
}

func (o *ListRunsResponseData) GetItems() []Run {
	if o == nil {
		return []Run{}
	}
	return o.Items
}

type ListRunsResponse struct {
	Data ListRunsResponseData `json:"data"`
}

func (o *ListRunsResponse) GetData() ListRunsResponseData {
	if o == nil {
		return ListRunsResponseData{}
	}
	return o.Data
}
