/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"fmt"
)

// checks if the OIDCConfigAllOfConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OIDCConfigAllOfConfig{}

// OIDCConfigAllOfConfig struct for OIDCConfigAllOfConfig
type OIDCConfigAllOfConfig struct {
	// OIDC issuer URL
	Issuer string `json:"issuer"`
	DiscoveryPath *string `json:"discoveryPath,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OIDCConfigAllOfConfig OIDCConfigAllOfConfig

// NewOIDCConfigAllOfConfig instantiates a new OIDCConfigAllOfConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOIDCConfigAllOfConfig(issuer string) *OIDCConfigAllOfConfig {
	this := OIDCConfigAllOfConfig{}
	this.Issuer = issuer
	var discoveryPath string = "/.well-known/openid-configuration"
	this.DiscoveryPath = &discoveryPath
	return &this
}

// NewOIDCConfigAllOfConfigWithDefaults instantiates a new OIDCConfigAllOfConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOIDCConfigAllOfConfigWithDefaults() *OIDCConfigAllOfConfig {
	this := OIDCConfigAllOfConfig{}
	var discoveryPath string = "/.well-known/openid-configuration"
	this.DiscoveryPath = &discoveryPath
	return &this
}

// GetIssuer returns the Issuer field value
func (o *OIDCConfigAllOfConfig) GetIssuer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value
// and a boolean to check if the value has been set.
func (o *OIDCConfigAllOfConfig) GetIssuerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Issuer, true
}

// SetIssuer sets field value
func (o *OIDCConfigAllOfConfig) SetIssuer(v string) {
	o.Issuer = v
}

// GetDiscoveryPath returns the DiscoveryPath field value if set, zero value otherwise.
func (o *OIDCConfigAllOfConfig) GetDiscoveryPath() string {
	if o == nil || IsNil(o.DiscoveryPath) {
		var ret string
		return ret
	}
	return *o.DiscoveryPath
}

// GetDiscoveryPathOk returns a tuple with the DiscoveryPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OIDCConfigAllOfConfig) GetDiscoveryPathOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveryPath) {
		return nil, false
	}
	return o.DiscoveryPath, true
}

// HasDiscoveryPath returns a boolean if a field has been set.
func (o *OIDCConfigAllOfConfig) HasDiscoveryPath() bool {
	if o != nil && !IsNil(o.DiscoveryPath) {
		return true
	}

	return false
}

// SetDiscoveryPath gets a reference to the given string and assigns it to the DiscoveryPath field.
func (o *OIDCConfigAllOfConfig) SetDiscoveryPath(v string) {
	o.DiscoveryPath = &v
}

func (o OIDCConfigAllOfConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OIDCConfigAllOfConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["issuer"] = o.Issuer
	if !IsNil(o.DiscoveryPath) {
		toSerialize["discoveryPath"] = o.DiscoveryPath
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OIDCConfigAllOfConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"issuer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOIDCConfigAllOfConfig := _OIDCConfigAllOfConfig{}

	err = json.Unmarshal(data, &varOIDCConfigAllOfConfig)

	if err != nil {
		return err
	}

	*o = OIDCConfigAllOfConfig(varOIDCConfigAllOfConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "issuer")
		delete(additionalProperties, "discoveryPath")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOIDCConfigAllOfConfig struct {
	value *OIDCConfigAllOfConfig
	isSet bool
}

func (v NullableOIDCConfigAllOfConfig) Get() *OIDCConfigAllOfConfig {
	return v.value
}

func (v *NullableOIDCConfigAllOfConfig) Set(val *OIDCConfigAllOfConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableOIDCConfigAllOfConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableOIDCConfigAllOfConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOIDCConfigAllOfConfig(val *OIDCConfigAllOfConfig) *NullableOIDCConfigAllOfConfig {
	return &NullableOIDCConfigAllOfConfig{value: val, isSet: true}
}

func (v NullableOIDCConfigAllOfConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOIDCConfigAllOfConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


