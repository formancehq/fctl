/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreateClientResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateClientResponseData{}

// CreateClientResponseData struct for CreateClientResponseData
type CreateClientResponseData struct {
	// Organization name
	Name string `json:"name"`
	DefaultOrganizationAccess *Role `json:"defaultOrganizationAccess,omitempty"`
	DefaultStackAccess *Role `json:"defaultStackAccess,omitempty"`
	// Organization domain
	Domain *string `json:"domain,omitempty"`
	// Organization ID
	Id string `json:"id"`
	// Owner ID
	OwnerId string `json:"ownerId"`
	// Number of available stacks
	AvailableStacks *int32 `json:"availableStacks,omitempty"`
	// Number of available sandboxes
	AvailableSandboxes *int32 `json:"availableSandboxes,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Secret CreateClientResponseDataAllOfSecret `json:"secret"`
	AdditionalProperties map[string]interface{}
}

type _CreateClientResponseData CreateClientResponseData

// NewCreateClientResponseData instantiates a new CreateClientResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClientResponseData(name string, id string, ownerId string, secret CreateClientResponseDataAllOfSecret) *CreateClientResponseData {
	this := CreateClientResponseData{}
	this.Name = name
	this.Id = id
	this.OwnerId = ownerId
	this.Secret = secret
	return &this
}

// NewCreateClientResponseDataWithDefaults instantiates a new CreateClientResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClientResponseDataWithDefaults() *CreateClientResponseData {
	this := CreateClientResponseData{}
	return &this
}

// GetName returns the Name field value
func (o *CreateClientResponseData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateClientResponseData) SetName(v string) {
	o.Name = v
}

// GetDefaultOrganizationAccess returns the DefaultOrganizationAccess field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetDefaultOrganizationAccess() Role {
	if o == nil || IsNil(o.DefaultOrganizationAccess) {
		var ret Role
		return ret
	}
	return *o.DefaultOrganizationAccess
}

// GetDefaultOrganizationAccessOk returns a tuple with the DefaultOrganizationAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetDefaultOrganizationAccessOk() (*Role, bool) {
	if o == nil || IsNil(o.DefaultOrganizationAccess) {
		return nil, false
	}
	return o.DefaultOrganizationAccess, true
}

// HasDefaultOrganizationAccess returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasDefaultOrganizationAccess() bool {
	if o != nil && !IsNil(o.DefaultOrganizationAccess) {
		return true
	}

	return false
}

// SetDefaultOrganizationAccess gets a reference to the given Role and assigns it to the DefaultOrganizationAccess field.
func (o *CreateClientResponseData) SetDefaultOrganizationAccess(v Role) {
	o.DefaultOrganizationAccess = &v
}

// GetDefaultStackAccess returns the DefaultStackAccess field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetDefaultStackAccess() Role {
	if o == nil || IsNil(o.DefaultStackAccess) {
		var ret Role
		return ret
	}
	return *o.DefaultStackAccess
}

// GetDefaultStackAccessOk returns a tuple with the DefaultStackAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetDefaultStackAccessOk() (*Role, bool) {
	if o == nil || IsNil(o.DefaultStackAccess) {
		return nil, false
	}
	return o.DefaultStackAccess, true
}

// HasDefaultStackAccess returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasDefaultStackAccess() bool {
	if o != nil && !IsNil(o.DefaultStackAccess) {
		return true
	}

	return false
}

// SetDefaultStackAccess gets a reference to the given Role and assigns it to the DefaultStackAccess field.
func (o *CreateClientResponseData) SetDefaultStackAccess(v Role) {
	o.DefaultStackAccess = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *CreateClientResponseData) SetDomain(v string) {
	o.Domain = &v
}

// GetId returns the Id field value
func (o *CreateClientResponseData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateClientResponseData) SetId(v string) {
	o.Id = v
}

// GetOwnerId returns the OwnerId field value
func (o *CreateClientResponseData) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *CreateClientResponseData) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetAvailableStacks returns the AvailableStacks field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetAvailableStacks() int32 {
	if o == nil || IsNil(o.AvailableStacks) {
		var ret int32
		return ret
	}
	return *o.AvailableStacks
}

// GetAvailableStacksOk returns a tuple with the AvailableStacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetAvailableStacksOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableStacks) {
		return nil, false
	}
	return o.AvailableStacks, true
}

// HasAvailableStacks returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasAvailableStacks() bool {
	if o != nil && !IsNil(o.AvailableStacks) {
		return true
	}

	return false
}

// SetAvailableStacks gets a reference to the given int32 and assigns it to the AvailableStacks field.
func (o *CreateClientResponseData) SetAvailableStacks(v int32) {
	o.AvailableStacks = &v
}

// GetAvailableSandboxes returns the AvailableSandboxes field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetAvailableSandboxes() int32 {
	if o == nil || IsNil(o.AvailableSandboxes) {
		var ret int32
		return ret
	}
	return *o.AvailableSandboxes
}

// GetAvailableSandboxesOk returns a tuple with the AvailableSandboxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetAvailableSandboxesOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableSandboxes) {
		return nil, false
	}
	return o.AvailableSandboxes, true
}

// HasAvailableSandboxes returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasAvailableSandboxes() bool {
	if o != nil && !IsNil(o.AvailableSandboxes) {
		return true
	}

	return false
}

// SetAvailableSandboxes gets a reference to the given int32 and assigns it to the AvailableSandboxes field.
func (o *CreateClientResponseData) SetAvailableSandboxes(v int32) {
	o.AvailableSandboxes = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *CreateClientResponseData) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CreateClientResponseData) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CreateClientResponseData) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CreateClientResponseData) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetSecret returns the Secret field value
func (o *CreateClientResponseData) GetSecret() CreateClientResponseDataAllOfSecret {
	if o == nil {
		var ret CreateClientResponseDataAllOfSecret
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *CreateClientResponseData) GetSecretOk() (*CreateClientResponseDataAllOfSecret, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *CreateClientResponseData) SetSecret(v CreateClientResponseDataAllOfSecret) {
	o.Secret = v
}

func (o CreateClientResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateClientResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.DefaultOrganizationAccess) {
		toSerialize["defaultOrganizationAccess"] = o.DefaultOrganizationAccess
	}
	if !IsNil(o.DefaultStackAccess) {
		toSerialize["defaultStackAccess"] = o.DefaultStackAccess
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	toSerialize["id"] = o.Id
	toSerialize["ownerId"] = o.OwnerId
	if !IsNil(o.AvailableStacks) {
		toSerialize["availableStacks"] = o.AvailableStacks
	}
	if !IsNil(o.AvailableSandboxes) {
		toSerialize["availableSandboxes"] = o.AvailableSandboxes
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	toSerialize["secret"] = o.Secret

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateClientResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"id",
		"ownerId",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateClientResponseData := _CreateClientResponseData{}

	err = json.Unmarshal(data, &varCreateClientResponseData)

	if err != nil {
		return err
	}

	*o = CreateClientResponseData(varCreateClientResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "defaultOrganizationAccess")
		delete(additionalProperties, "defaultStackAccess")
		delete(additionalProperties, "domain")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ownerId")
		delete(additionalProperties, "availableStacks")
		delete(additionalProperties, "availableSandboxes")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateClientResponseData struct {
	value *CreateClientResponseData
	isSet bool
}

func (v NullableCreateClientResponseData) Get() *CreateClientResponseData {
	return v.value
}

func (v *NullableCreateClientResponseData) Set(val *CreateClientResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClientResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClientResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClientResponseData(val *CreateClientResponseData) *NullableCreateClientResponseData {
	return &NullableCreateClientResponseData{value: val, isSet: true}
}

func (v NullableCreateClientResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClientResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


