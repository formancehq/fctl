/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the UpdateOrganizationUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationUserRequest{}

// UpdateOrganizationUserRequest struct for UpdateOrganizationUserRequest
type UpdateOrganizationUserRequest struct {
	// Policy ID applied to the user
	PolicyID *int32 `json:"policyID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateOrganizationUserRequest UpdateOrganizationUserRequest

// NewUpdateOrganizationUserRequest instantiates a new UpdateOrganizationUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationUserRequest() *UpdateOrganizationUserRequest {
	this := UpdateOrganizationUserRequest{}
	return &this
}

// NewUpdateOrganizationUserRequestWithDefaults instantiates a new UpdateOrganizationUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationUserRequestWithDefaults() *UpdateOrganizationUserRequest {
	this := UpdateOrganizationUserRequest{}
	return &this
}

// GetPolicyID returns the PolicyID field value if set, zero value otherwise.
func (o *UpdateOrganizationUserRequest) GetPolicyID() int32 {
	if o == nil || IsNil(o.PolicyID) {
		var ret int32
		return ret
	}
	return *o.PolicyID
}

// GetPolicyIDOk returns a tuple with the PolicyID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationUserRequest) GetPolicyIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyID) {
		return nil, false
	}
	return o.PolicyID, true
}

// HasPolicyID returns a boolean if a field has been set.
func (o *UpdateOrganizationUserRequest) HasPolicyID() bool {
	if o != nil && !IsNil(o.PolicyID) {
		return true
	}

	return false
}

// SetPolicyID gets a reference to the given int32 and assigns it to the PolicyID field.
func (o *UpdateOrganizationUserRequest) SetPolicyID(v int32) {
	o.PolicyID = &v
}

func (o UpdateOrganizationUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyID) {
		toSerialize["policyID"] = o.PolicyID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateOrganizationUserRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateOrganizationUserRequest := _UpdateOrganizationUserRequest{}

	err = json.Unmarshal(data, &varUpdateOrganizationUserRequest)

	if err != nil {
		return err
	}

	*o = UpdateOrganizationUserRequest(varUpdateOrganizationUserRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "policyID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateOrganizationUserRequest struct {
	value *UpdateOrganizationUserRequest
	isSet bool
}

func (v NullableUpdateOrganizationUserRequest) Get() *UpdateOrganizationUserRequest {
	return v.value
}

func (v *NullableUpdateOrganizationUserRequest) Set(val *UpdateOrganizationUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationUserRequest(val *UpdateOrganizationUserRequest) *NullableUpdateOrganizationUserRequest {
	return &NullableUpdateOrganizationUserRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


