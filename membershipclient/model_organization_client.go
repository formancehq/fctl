/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the OrganizationClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationClient{}

// OrganizationClient struct for OrganizationClient
type OrganizationClient struct {
	// Organization ID
	Id string `json:"id"`
	Secret OrganizationClientSecret `json:"secret"`
	// Name of the client
	Name string `json:"name"`
	// Description of the client
	Description string `json:"description"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	AdditionalProperties map[string]interface{}
}

type _OrganizationClient OrganizationClient

// NewOrganizationClient instantiates a new OrganizationClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationClient(id string, secret OrganizationClientSecret, name string, description string, createdAt time.Time, updatedAt time.Time) *OrganizationClient {
	this := OrganizationClient{}
	this.Id = id
	this.Secret = secret
	this.Name = name
	this.Description = description
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewOrganizationClientWithDefaults instantiates a new OrganizationClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationClientWithDefaults() *OrganizationClient {
	this := OrganizationClient{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationClient) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationClient) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationClient) SetId(v string) {
	o.Id = v
}

// GetSecret returns the Secret field value
func (o *OrganizationClient) GetSecret() OrganizationClientSecret {
	if o == nil {
		var ret OrganizationClientSecret
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *OrganizationClient) GetSecretOk() (*OrganizationClientSecret, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *OrganizationClient) SetSecret(v OrganizationClientSecret) {
	o.Secret = v
}

// GetName returns the Name field value
func (o *OrganizationClient) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationClient) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationClient) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *OrganizationClient) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *OrganizationClient) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *OrganizationClient) SetDescription(v string) {
	o.Description = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationClient) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationClient) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationClient) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *OrganizationClient) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationClient) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *OrganizationClient) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o OrganizationClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["secret"] = o.Secret
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrganizationClient) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"secret",
		"name",
		"description",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrganizationClient := _OrganizationClient{}

	err = json.Unmarshal(data, &varOrganizationClient)

	if err != nil {
		return err
	}

	*o = OrganizationClient(varOrganizationClient)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrganizationClient struct {
	value *OrganizationClient
	isSet bool
}

func (v NullableOrganizationClient) Get() *OrganizationClient {
	return v.value
}

func (v *NullableOrganizationClient) Set(val *OrganizationClient) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationClient) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationClient(val *OrganizationClient) *NullableOrganizationClient {
	return &NullableOrganizationClient{value: val, isSet: true}
}

func (v NullableOrganizationClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


