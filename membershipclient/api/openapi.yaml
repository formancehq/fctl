openapi: 3.0.3
info:
  contact: {}
  title: Membership API
  version: 0.1.0
servers:
- description: Local server
  url: http://localhost:8080
security:
- oauth2: []
paths:
  /_info:
    get:
      operationId: getServerInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
          description: Server information
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get server info
  /organizations:
    get:
      operationId: listOrganizations
      parameters:
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationExpandedResponse'
          description: List of organizations
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List organizations of the connected user
    post:
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
          description: Organization created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create organization
  /organizations/expanded:
    get:
      deprecated: true
      operationId: listOrganizationsExpanded
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationExpandedResponse'
          description: List of organizations with expanded data
      summary: List organizations of the connected user with expanded data
  /organizations/{organizationId}:
    delete:
      operationId: deleteOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Organization deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete organization
    get:
      operationId: readOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: expand
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read organization
    put:
      operationId: updateOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationResponse'
          description: Organization updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update organization
  /organizations/{organizationId}/authentication-provider:
    delete:
      operationId: deleteAuthenticationProvider
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Authentication provider deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete authentication provider
    get:
      operationId: readAuthenticationProvider
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationProviderResponse'
          description: Authentication provider details
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read authentication provider
    put:
      operationId: upsertAuthenticationProvider
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertAuthenticationProviderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationProviderResponse'
          description: Authentication provider created or updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Upsert an authentication provider
  /organizations/{organizationId}/features:
    get:
      operationId: listFeatures
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listFeatures_200_response'
          description: List of features
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List features
    post:
      operationId: addFeatures
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addFeatures_request'
      responses:
        "204":
          description: Features added
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Add Features
  /organizations/{organizationId}/features/{name}:
    delete:
      operationId: deleteFeature
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Feature deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete feature
  /organizations/{organizationId}/client:
    delete:
      deprecated: true
      operationId: deleteOrganizationClient
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Client deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete organization client (DEPRECATED) (until 12/31/2025)
    get:
      deprecated: true
      operationId: readOrganizationClient
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationClientResponse'
          description: Organization client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read organization client (DEPRECATED) (until 12/31/2025)
    put:
      deprecated: true
      operationId: createOrganizationClient
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationClientResponse'
          description: Client organization created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create organization client (DEPRECATED) (until 12/31/2025)
  /organizations/{organizationId}/clients:
    get:
      operationId: organizationClientsRead
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationClientsResponse'
          description: Organization client
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read organization clients
    post:
      operationId: organizationClientCreate
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationClientRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationClientResponse'
          description: Organization client created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create organization client
  /organizations/{organizationId}/clients/{clientId}:
    delete:
      operationId: organizationClientDelete
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Client deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete organization client
    get:
      operationId: organizationClientRead
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationClientResponse'
          description: Organization client details
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read organization client
  /organizations/{organizationId}/logs:
    get:
      operationId: listLogs
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: stackId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: action
        required: false
        schema:
          $ref: '#/components/schemas/Action'
        style: form
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogCursor'
          description: Cursor of logs
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List logs
  /organizations/{organizationId}/users:
    get:
      operationId: listUsersOfOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
          description: List of users
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List users of organization
  /organizations/{organizationId}/users/{userId}:
    delete:
      description: |
        The owner of the organization can remove anyone while each user can leave any organization where it is not owner.
      operationId: deleteUserFromOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User deleted from organization
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: delete user from organization
    get:
      operationId: readUserOfOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationUserResponse'
          description: Read a user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read user of organization
    put:
      operationId: upsertOrganizationUser
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationUserRequest'
      responses:
        "204":
          description: Updated user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update user within an organization
  /organizations/{organizationId}/stacks:
    get:
      operationId: listStacks
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Include deleted and disabled stacks
        explode: true
        in: query
        name: all
        required: false
        schema:
          type: boolean
        style: form
      - deprecated: true
        description: Include deleted stacks
        explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStacksResponse'
          description: List of stacks
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List stacks
    post:
      operationId: createStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStackRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStackResponse'
          description: Stack created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create stack
  /organizations/{organizationId}/stacks/{stackId}/modules:
    delete:
      operationId: disableModule
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "202":
          description: Module disabled
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: disable module
    get:
      operationId: listModules
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListModulesResponse'
          description: List of modules
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List modules of a stack
    post:
      operationId: enableModule
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "202":
          description: Module enabled
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: enable module
  /organizations/{organizationId}/stacks/{stackId}/upgrade:
    put:
      operationId: upgradeStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackVersion'
      responses:
        "202":
          description: Stack upgrade accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Upgrade stack
  /organizations/{organizationId}/stacks/{stackId}:
    delete:
      operationId: deleteStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Stack deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete stack
    get:
      operationId: getStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadStackResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Find stack
    put:
      operationId: updateStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStackRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadStackResponse'
          description: Updated stack
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update stack
  /organizations/{organizationId}/stacks/{stackId}/users:
    get:
      operationId: listStackUsersAccesses
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StackUserAccessResponse'
          description: Stack users access role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List stack users accesses within an organization
  /organizations/{organizationId}/stacks/{stackId}/users/{userId}:
    delete:
      operationId: deleteStackUserAccess
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Updated user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete stack user access role within an organization
    get:
      operationId: readStackUserAccess
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadStackUserAccess'
          description: Stack user access role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read stack user access role within an organization
    put:
      operationId: upsertStackUserAccess
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStackUserRequest'
      responses:
        "204":
          description: Updated user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Update stack user access role within an organization
  /organizations/{organizationId}/stacks/{stackId}/disable:
    put:
      operationId: disableStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Stack disabled
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Disable stack
  /organizations/{organizationId}/stacks/{stackId}/enable:
    put:
      operationId: enableStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Stack enabled
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Enable stack
  /organizations/{organizationId}/stacks/{stackId}/restore:
    put:
      operationId: restoreStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadStackResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Restore stack
  /organizations/{organizationId}/stacks/{stackId}/stargate/enable:
    put:
      operationId: enableStargate
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Enable stargate on a stack
  /organizations/{organizationId}/stacks/{stackId}/stargate/disable:
    put:
      operationId: disableStargate
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Disable stargate on a stack
  /me/invitations:
    get:
      operationId: listInvitations
      parameters:
      - description: Status of organizations
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Status of organizations
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
          description: List of the invitations for the connected user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List invitations of the user
  /me/invitations/{invitationId}/accept:
    post:
      operationId: acceptInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Accept invitation
  /me/invitations/{invitationId}/reject:
    post:
      operationId: declineInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation declined
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Decline invitation
  /organizations/{organizationId}/invitations:
    get:
      operationId: listOrganizationInvitations
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - description: Status of organizations
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
          description: List of the invitations for the organization
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List invitations of the organization
    post:
      operationId: createInvitation
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationClaim'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitationResponse'
          description: Invitation already sent
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitationResponse'
          description: Invitation created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create invitation
  /organizations/{organizationId}/invitations/{invitationId}:
    delete:
      operationId: deleteInvitation
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete invitation
  /organizations/{organizationId}/regions:
    get:
      operationId: listRegions
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
          description: List of the regions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: List regions
    post:
      operationId: createPrivateRegion
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrivateRegionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedPrivateRegionResponse'
          description: Created region
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Create a private region
  /organizations/{organizationId}/regions/{regionID}:
    delete:
      operationId: deleteRegion
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: regionID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Delete a specific region
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Delete region
    get:
      operationId: getRegion
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: regionID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionResponse'
          description: Get a specific region
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get region
  /organizations/{organizationId}/regions/{regionID}/versions:
    get:
      operationId: getRegionVersions
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: regionID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionVersionsResponse'
          description: Get a specific region
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Get region versions
  /me:
    get:
      operationId: readConnectedUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadUserResponse'
          description: Read a user
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      summary: Read user
components:
  schemas:
    Module:
      example:
        lastStateUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
        state: ENABLED
        clusterStatus: "{}"
        status: UNKNOWN
      properties:
        name:
          type: string
        state:
          enum:
          - ENABLED
          - DISABLED
          type: string
        status:
          enum:
          - UNKNOWN
          - PROGRESSING
          - READY
          - DELETED
          type: string
        lastStatusUpdate:
          format: date-time
          type: string
        lastStateUpdate:
          format: date-time
          type: string
        clusterStatus:
          type: object
      required:
      - lastStateUpdate
      - lastStatusUpdate
      - name
      - state
      - status
      type: object
    ListModulesResponse:
      example:
        data:
        - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          name: name
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          state: ENABLED
          clusterStatus: "{}"
          status: UNKNOWN
        - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          name: name
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          state: ENABLED
          clusterStatus: "{}"
          status: UNKNOWN
      properties:
        data:
          items:
            $ref: '#/components/schemas/Module'
          type: array
      required:
      - data
      type: object
    Action:
      enum:
      - agents.connected
      - agents.disconnected
      - invitations.created
      - invitations.accepted
      - invitations.rejected
      - invitations.cancelled
      - organizations.created
      - organizations.updated
      - organizations.deleted
      - organizations.user.deleted
      - organizations.user.updated
      - regions.created
      - regions.deleted
      - users.created
      - users.deleted
      - stacks.disposal
      - stacks.disposal-reset
      - stacks.warned
      - stacks.pruned
      - stacks.status.updated
      - stacks.created
      - stacks.updated
      - stacks.deleted
      - stacks.restored
      - stacks.disabled
      - stacks.enabled
      - stacks.upgraded
      - stacks.stargate.enabled
      - stacks.stargate.disabled
      - stacks.user.updated
      - stacks.user.deleted
      - stacks.reachness.updated
      - stacks.module.enabled
      - stacks.module.disabled
      - stacks.module.status.updated
      type: string
    LogCursor:
      example:
        data:
          next: ""
          previous: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
          data:
          - organizationId: organizationId
            date: 2000-01-23T04:56:07.000+00:00
            data: "{}"
            action: action
            userId: userId
            seq: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
          - organizationId: organizationId
            date: 2000-01-23T04:56:07.000+00:00
            data: "{}"
            action: action
            userId: userId
            seq: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
          hasMore: false
          pageSize: 15
      properties:
        data:
          $ref: '#/components/schemas/LogCursor_data'
      required:
      - data
    Log:
      example:
        organizationId: organizationId
        date: 2000-01-23T04:56:07.000+00:00
        data: "{}"
        action: action
        userId: userId
        seq: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
      properties:
        seq:
          example: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
          type: string
        organizationId:
          type: string
        userId:
          type: string
        action:
          type: string
        date:
          format: date-time
          type: string
        data:
          type: object
      required:
      - action
      - data
      - date
      - organizationId
      - seq
      - userId
      type: object
    Cursor:
      properties:
        pageSize:
          example: 15
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
        hasMore:
          example: false
          type: boolean
        previous:
          example: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
          type: string
        next:
          example: ""
          type: string
      required:
      - data
      - hasMore
      - pageSize
      type: object
    OrganizationFeature:
      example:
        organizationID: organizationID
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
      properties:
        organizationID:
          type: string
        name:
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - createdAt
      - name
      - organizationID
      type: object
    CreatePrivateRegionRequest:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
    CreatedPrivateRegionResponse:
      example:
        data:
          agentID: agentID
          capabilities:
            EE:
            - EE
            - EE
            MODULE_LIST:
            - MODULE_LIST
            - MODULE_LIST
          creatorId: creatorId
          creatorID: creatorID
          active: true
          lastPing: 2000-01-23T04:56:07.000+00:00
          secret:
            clear: clear
            lastDigits: lastDigits
          version: version
          organizationID: organizationID
          createdAt: createdAt
          baseUrl: baseUrl
          outdated: true
          name: name
          id: id
      properties:
        data:
          $ref: '#/components/schemas/PrivateRegion'
      required:
      - data
    PrivateRegion:
      allOf:
      - $ref: '#/components/schemas/Region'
      - properties:
          organizationID:
            type: string
          creatorID:
            type: string
          secret:
            $ref: '#/components/schemas/PrivateRegionSecret'
        required:
        - creatorID
        - organizationID
        type: object
      example:
        agentID: agentID
        capabilities:
          EE:
          - EE
          - EE
          MODULE_LIST:
          - MODULE_LIST
          - MODULE_LIST
        creatorId: creatorId
        creatorID: creatorID
        active: true
        lastPing: 2000-01-23T04:56:07.000+00:00
        secret:
          clear: clear
          lastDigits: lastDigits
        version: version
        organizationID: organizationID
        createdAt: createdAt
        baseUrl: baseUrl
        outdated: true
        name: name
        id: id
    PublicRegion:
      allOf:
      - $ref: '#/components/schemas/Region'
      - properties:
          production:
            type: boolean
        required:
        - production
        type: object
    AnyRegion:
      allOf:
      - $ref: '#/components/schemas/Region'
      - properties:
          clientID:
            type: string
          organizationID:
            type: string
          creator:
            $ref: '#/components/schemas/User'
          production:
            type: boolean
          public:
            type: boolean
          version:
            type: string
          agentID:
            type: string
          outdated:
            type: boolean
          secret:
            $ref: '#/components/schemas/PrivateRegionSecret'
        required:
        - agentID
        - outdated
        - public
        type: object
      example:
        agentID: agentID
        creator:
          role: USER
          id: id
          email: email
        capabilities:
          EE:
          - EE
          - EE
          MODULE_LIST:
          - MODULE_LIST
          - MODULE_LIST
        clientID: clientID
        production: true
        creatorId: creatorId
        active: true
        lastPing: 2000-01-23T04:56:07.000+00:00
        secret:
          clear: clear
          lastDigits: lastDigits
        version: version
        organizationID: organizationID
        createdAt: createdAt
        baseUrl: baseUrl
        outdated: true
        public: true
        name: name
        id: id
    PrivateRegionSecret:
      example:
        clear: clear
        lastDigits: lastDigits
      properties:
        lastDigits:
          type: string
        clear:
          type: string
      required:
      - lastDigits
      type: object
    OrganizationData:
      example:
        defaultOrganizationAccess: NONE
        defaultStackAccess: null
        domain: domain
        name: name
      properties:
        name:
          description: Organization name
          type: string
        defaultOrganizationAccess:
          $ref: '#/components/schemas/Role'
        defaultStackAccess:
          $ref: '#/components/schemas/Role'
        domain:
          description: Organization domain
          type: string
      required:
      - name
      type: object
    CreateOrganizationClientRequest:
      example:
        description: description
      properties:
        description:
          description: Description of the client
          type: string
      type: object
    CreateOrganizationClientResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          secret:
            clear: clear
            lastDigits: lastDigits
      properties:
        data:
          $ref: '#/components/schemas/OrganizationClient'
      required:
      - data
      type: object
    ReadOrganizationClientResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          secret:
            clear: clear
            lastDigits: lastDigits
      properties:
        data:
          $ref: '#/components/schemas/OrganizationClient'
      required:
      - data
      type: object
    ReadOrganizationClientsResponse:
      example:
        data:
          next: ""
          previous: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
          data:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            description: description
            id: id
            secret:
              clear: clear
              lastDigits: lastDigits
          - createdAt: 2000-01-23T04:56:07.000+00:00
            description: description
            id: id
            secret:
              clear: clear
              lastDigits: lastDigits
          hasMore: false
          pageSize: 15
      properties:
        data:
          $ref: '#/components/schemas/ReadOrganizationClientsResponse_data'
      required:
      - data
      type: object
    OrganizationClient:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        secret:
          clear: clear
          lastDigits: lastDigits
      properties:
        id:
          description: Organization ID
          type: string
        secret:
          $ref: '#/components/schemas/OrganizationClient_secret'
        description:
          description: Description of the client
          type: string
        createdAt:
          format: date-time
          type: string
      required:
      - createdAt
      - description
      - id
      - secret
      type: object
    Organization:
      allOf:
      - $ref: '#/components/schemas/OrganizationData'
      - properties:
          id:
            description: Organization ID
            type: string
          ownerId:
            description: Owner ID
            type: string
          availableStacks:
            description: Number of available stacks
            type: integer
          availableSandboxes:
            description: Number of available sandboxes
            type: integer
          createdAt:
            format: date-time
            type: string
          updatedAt:
            format: date-time
            type: string
        required:
        - id
        - ownerId
        type: object
    StackData:
      properties:
        name:
          description: Stack name
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - name
      type: object
    StackVersion:
      example:
        version: version
      properties:
        version:
          description: Supported only with agent version >= v0.7.0
          type: string
      type: object
    StackLifeCycle:
      properties:
        status:
          enum:
          - UNKNOWN
          - PROGRESSING
          - READY
          - DISABLED
          - DELETED
          type: string
        state:
          enum:
          - ACTIVE
          - DISABLED
          - DELETED
          type: string
        expectedStatus:
          enum:
          - READY
          - DISABLED
          - DELETED
          type: string
        lastStateUpdate:
          format: date-time
          type: string
        lastExpectedStatusUpdate:
          format: date-time
          type: string
        lastStatusUpdate:
          format: date-time
          type: string
        warnedAt:
          format: date-time
          type: string
        disposableSince:
          format: date-time
          type: string
      required:
      - expectedStatus
      - lastExpectedStatusUpdate
      - lastStateUpdate
      - lastStatusUpdate
      - state
      - status
      type: object
    StackReachability:
      properties:
        reachable:
          description: Stack is reachable through Stargate
          type: boolean
        lastReachableUpdate:
          description: Last time the stack was reachable
          format: date-time
          type: string
      required:
      - reachable
      type: object
    Stack:
      allOf:
      - $ref: '#/components/schemas/StackData'
      - $ref: '#/components/schemas/StackVersion'
      - $ref: '#/components/schemas/StackLifeCycle'
      - $ref: '#/components/schemas/StackReachability'
      - properties:
          id:
            description: Stack ID
            type: string
          organizationId:
            description: Organization ID
            type: string
          uri:
            description: Base stack uri
            type: string
          regionID:
            description: The region where the stack is installed
            type: string
          region:
            $ref: '#/components/schemas/Region'
          stargateEnabled:
            type: boolean
          createdAt:
            format: date-time
            type: string
          deletedAt:
            format: date-time
            type: string
          disabledAt:
            format: date-time
            type: string
          auditEnabled:
            type: boolean
          synchronised:
            type: boolean
          updatedAt:
            format: date-time
            type: string
          modules:
            items:
              $ref: '#/components/schemas/Module'
            type: array
        required:
        - id
        - modules
        - organizationId
        - regionID
        - stargateEnabled
        - synchronised
        - uri
        type: object
      example:
        auditEnabled: true
        metadata:
          key: metadata
        expectedStatus: READY
        disabledAt: 2000-01-23T04:56:07.000+00:00
        organizationId: organizationId
        lastExpectedStatusUpdate: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        regionID: regionID
        warnedAt: 2000-01-23T04:56:07.000+00:00
        lastStateUpdate: 2000-01-23T04:56:07.000+00:00
        lastReachableUpdate: 2000-01-23T04:56:07.000+00:00
        synchronised: true
        state: ACTIVE
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
        lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
        version: version
        uri: uri
        reachable: true
        stargateEnabled: true
        modules:
        - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          name: name
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          state: ENABLED
          clusterStatus: "{}"
          status: UNKNOWN
        - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          name: name
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          state: ENABLED
          clusterStatus: "{}"
          status: UNKNOWN
        deletedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        region:
          createdAt: createdAt
          baseUrl: baseUrl
          agentID: agentID
          capabilities:
            EE:
            - EE
            - EE
            MODULE_LIST:
            - MODULE_LIST
            - MODULE_LIST
          outdated: true
          name: name
          creatorId: creatorId
          active: true
          lastPing: 2000-01-23T04:56:07.000+00:00
          id: id
          version: version
        disposableSince: 2000-01-23T04:56:07.000+00:00
        status: UNKNOWN
    UserData:
      allOf:
      - properties:
          email:
            type: string
        required:
        - email
        type: object
    Role:
      enum:
      - NONE
      - ADMIN
      - GUEST
      type: string
    SystemRole:
      enum:
      - USER
      - SYSTEM
      type: string
    User:
      allOf:
      - $ref: '#/components/schemas/UserData'
      - properties:
          id:
            description: User ID
            type: string
        required:
        - id
        type: object
      - properties:
          role:
            $ref: '#/components/schemas/SystemRole'
        type: object
      example:
        role: USER
        id: id
        email: email
    OrganizationUserArray:
      items:
        allOf:
        - $ref: '#/components/schemas/OrganizationUser'
      type: array
    ReadOrganizationUserResponse:
      example:
        data:
          role: NONE
          id: id
          email: email
      properties:
        data:
          $ref: '#/components/schemas/OrganizationUser'
      type: object
    OrganizationUser:
      allOf:
      - properties:
          role:
            $ref: '#/components/schemas/Role'
          email:
            type: string
          id:
            type: string
        required:
        - email
        - id
        - role
        type: object
      example:
        role: NONE
        id: id
        email: email
    OrganizationArray:
      items:
        $ref: '#/components/schemas/Organization'
      type: array
    StackArray:
      items:
        $ref: '#/components/schemas/Stack'
      type: array
    UserArray:
      items:
        $ref: '#/components/schemas/User'
      type: array
    ReadStackUserAccess:
      example:
        data:
          role: NONE
          stackId: stackId
          userId: userId
          email: email
      properties:
        data:
          $ref: '#/components/schemas/StackUserAccess'
      type: object
    StackUserAccess:
      allOf:
      - properties:
          stackId:
            description: Stack ID
            type: string
          userId:
            description: User ID
            type: string
          email:
            description: User email
            type: string
          role:
            $ref: '#/components/schemas/Role'
        required:
        - email
        - role
        - stackId
        - userId
        type: object
      example:
        role: NONE
        stackId: stackId
        userId: userId
        email: email
    StackUserAccessResponse:
      example:
        data:
        - role: NONE
          stackId: stackId
          userId: userId
          email: email
        - role: NONE
          stackId: stackId
          userId: userId
          email: email
      properties:
        data:
          items:
            $ref: '#/components/schemas/StackUserAccess'
          type: array
      type: object
    StackUserAccessArray:
      items:
        $ref: '#/components/schemas/StackUserAccess'
      type: array
    ListOrganizationResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      type: object
    CreateOrganizationRequest:
      $ref: '#/components/schemas/OrganizationData'
    CreateOrganizationResponse:
      example:
        data:
          owner:
            role: USER
            id: id
            email: email
          defaultOrganizationAccess: NONE
          totalUsers: 5
          ownerId: ownerId
          totalStacks: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          defaultStackAccess: null
          domain: domain
          name: name
          id: id
          availableSandboxes: 6
          availableStacks: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/OrganizationExpanded'
      type: object
    ReadOrganizationResponse:
      example:
        data:
          owner:
            role: USER
            id: id
            email: email
          defaultOrganizationAccess: NONE
          totalUsers: 5
          ownerId: ownerId
          totalStacks: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          defaultStackAccess: null
          domain: domain
          name: name
          id: id
          availableSandboxes: 6
          availableStacks: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/OrganizationExpanded'
      type: object
    ListStacksResponse:
      example:
        data:
        - auditEnabled: true
          metadata:
            key: metadata
          expectedStatus: READY
          disabledAt: 2000-01-23T04:56:07.000+00:00
          organizationId: organizationId
          lastExpectedStatusUpdate: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          regionID: regionID
          warnedAt: 2000-01-23T04:56:07.000+00:00
          lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          lastReachableUpdate: 2000-01-23T04:56:07.000+00:00
          synchronised: true
          state: ACTIVE
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          version: version
          uri: uri
          reachable: true
          stargateEnabled: true
          modules:
          - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
            state: ENABLED
            clusterStatus: "{}"
            status: UNKNOWN
          - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
            state: ENABLED
            clusterStatus: "{}"
            status: UNKNOWN
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          region:
            createdAt: createdAt
            baseUrl: baseUrl
            agentID: agentID
            capabilities:
              EE:
              - EE
              - EE
              MODULE_LIST:
              - MODULE_LIST
              - MODULE_LIST
            outdated: true
            name: name
            creatorId: creatorId
            active: true
            lastPing: 2000-01-23T04:56:07.000+00:00
            id: id
            version: version
          disposableSince: 2000-01-23T04:56:07.000+00:00
          status: UNKNOWN
        - auditEnabled: true
          metadata:
            key: metadata
          expectedStatus: READY
          disabledAt: 2000-01-23T04:56:07.000+00:00
          organizationId: organizationId
          lastExpectedStatusUpdate: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          regionID: regionID
          warnedAt: 2000-01-23T04:56:07.000+00:00
          lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          lastReachableUpdate: 2000-01-23T04:56:07.000+00:00
          synchronised: true
          state: ACTIVE
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          version: version
          uri: uri
          reachable: true
          stargateEnabled: true
          modules:
          - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
            state: ENABLED
            clusterStatus: "{}"
            status: UNKNOWN
          - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
            state: ENABLED
            clusterStatus: "{}"
            status: UNKNOWN
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          region:
            createdAt: createdAt
            baseUrl: baseUrl
            agentID: agentID
            capabilities:
              EE:
              - EE
              - EE
              MODULE_LIST:
              - MODULE_LIST
              - MODULE_LIST
            outdated: true
            name: name
            creatorId: creatorId
            active: true
            lastPing: 2000-01-23T04:56:07.000+00:00
            id: id
            version: version
          disposableSince: 2000-01-23T04:56:07.000+00:00
          status: UNKNOWN
      properties:
        data:
          items:
            $ref: '#/components/schemas/Stack'
          type: array
      type: object
    ListUsersResponse:
      example:
        data:
        - ""
        - ""
      properties:
        data:
          items:
            allOf:
            - $ref: '#/components/schemas/OrganizationUser'
          type: array
      type: object
    CreateStackRequest:
      allOf:
      - $ref: '#/components/schemas/StackData'
      - $ref: '#/components/schemas/StackVersion'
      - properties:
          regionID:
            type: string
        required:
        - regionID
        type: object
      example:
        metadata:
          key: metadata
        regionID: regionID
        name: name
        version: version
    UpdateStackRequest:
      allOf:
      - $ref: '#/components/schemas/StackData'
      example:
        metadata:
          key: metadata
        name: name
    CreateStackResponse:
      example:
        data:
          auditEnabled: true
          metadata:
            key: metadata
          expectedStatus: READY
          disabledAt: 2000-01-23T04:56:07.000+00:00
          organizationId: organizationId
          lastExpectedStatusUpdate: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          regionID: regionID
          warnedAt: 2000-01-23T04:56:07.000+00:00
          lastStateUpdate: 2000-01-23T04:56:07.000+00:00
          lastReachableUpdate: 2000-01-23T04:56:07.000+00:00
          synchronised: true
          state: ACTIVE
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
          version: version
          uri: uri
          reachable: true
          stargateEnabled: true
          modules:
          - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
            state: ENABLED
            clusterStatus: "{}"
            status: UNKNOWN
          - lastStateUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            lastStatusUpdate: 2000-01-23T04:56:07.000+00:00
            state: ENABLED
            clusterStatus: "{}"
            status: UNKNOWN
          deletedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          region:
            createdAt: createdAt
            baseUrl: baseUrl
            agentID: agentID
            capabilities:
              EE:
              - EE
              - EE
              MODULE_LIST:
              - MODULE_LIST
              - MODULE_LIST
            outdated: true
            name: name
            creatorId: creatorId
            active: true
            lastPing: 2000-01-23T04:56:07.000+00:00
            id: id
            version: version
          disposableSince: 2000-01-23T04:56:07.000+00:00
          status: UNKNOWN
      properties:
        data:
          $ref: '#/components/schemas/Stack'
      type: object
    ReadStackResponse:
      $ref: '#/components/schemas/CreateStackResponse'
    ReadUserResponse:
      example:
        data:
          role: USER
          id: id
          email: email
      properties:
        data:
          $ref: '#/components/schemas/User'
      type: object
    ListInvitationsResponse:
      example:
        data:
        - organizationId: organizationId
          role: NONE
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          creatorId: creatorId
          userEmail: userEmail
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          organizationAccess:
            role: NONE
            id: id
            email: email
          expiresAt: 2000-01-23T04:56:07.000+00:00
          status: PENDING
          updatedAt: updatedAt
        - organizationId: organizationId
          role: NONE
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          creatorId: creatorId
          userEmail: userEmail
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          organizationAccess:
            role: NONE
            id: id
            email: email
          expiresAt: 2000-01-23T04:56:07.000+00:00
          status: PENDING
          updatedAt: updatedAt
      properties:
        data:
          items:
            $ref: '#/components/schemas/Invitation'
          type: array
      type: object
    CreateInvitationResponse:
      example:
        data:
          organizationId: organizationId
          role: NONE
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          creatorId: creatorId
          userEmail: userEmail
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          userId: userId
          organizationAccess:
            role: NONE
            id: id
            email: email
          expiresAt: 2000-01-23T04:56:07.000+00:00
          status: PENDING
          updatedAt: updatedAt
      properties:
        data:
          $ref: '#/components/schemas/Invitation'
      type: object
    Error:
      example:
        errorMessage: errorMessage
        errorCode: errorCode
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
      required:
      - errorCode
      type: object
    Invitation:
      example:
        organizationId: organizationId
        role: NONE
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        creatorId: creatorId
        userEmail: userEmail
        id: id
        creationDate: 2000-01-23T04:56:07.000+00:00
        userId: userId
        organizationAccess:
          role: NONE
          id: id
          email: email
        expiresAt: 2000-01-23T04:56:07.000+00:00
        status: PENDING
        updatedAt: updatedAt
      properties:
        id:
          type: string
        organizationId:
          type: string
        userEmail:
          type: string
        status:
          enum:
          - PENDING
          - ACCEPTED
          - REJECTED
          - CANCELLED
          type: string
        creationDate:
          format: date-time
          type: string
        updatedAt:
          format: date-tim
          type: string
        role:
          $ref: '#/components/schemas/Role'
        userId:
          type: string
        organizationAccess:
          $ref: '#/components/schemas/OrganizationUser'
        expiresAt:
          format: date-time
          type: string
        creatorId:
          type: string
        lastUpdate:
          format: date-time
          type: string
      required:
      - creationDate
      - creatorID
      - id
      - organizationId
      - role
      - status
      - userEmail
      type: object
    InvitationClaim:
      example:
        role: NONE
      properties:
        role:
          $ref: '#/components/schemas/Role'
      type: object
    Region:
      example:
        createdAt: createdAt
        baseUrl: baseUrl
        agentID: agentID
        capabilities:
          EE:
          - EE
          - EE
          MODULE_LIST:
          - MODULE_LIST
          - MODULE_LIST
        outdated: true
        name: name
        creatorId: creatorId
        active: true
        lastPing: 2000-01-23T04:56:07.000+00:00
        id: id
        version: version
      properties:
        id:
          type: string
        baseUrl:
          type: string
        createdAt:
          format: datetime
          type: string
        active:
          type: boolean
        lastPing:
          format: date-time
          type: string
        name:
          type: string
        capabilities:
          $ref: '#/components/schemas/RegionCapability'
        agentID:
          type: string
        outdated:
          type: boolean
        creatorId:
          type: string
        version:
          type: string
      required:
      - active
      - agentID
      - baseUrl
      - capabilities
      - createdAt
      - id
      - name
      - outdated
      type: object
    RegionCapability:
      example:
        EE:
        - EE
        - EE
        MODULE_LIST:
        - MODULE_LIST
        - MODULE_LIST
      properties:
        MODULE_LIST:
          items:
            type: string
          type: array
        EE:
          items:
            type: string
          type: array
      type: object
    RegionCapabilityKeys:
      enum:
      - MODULE_LIST
      - EE
      type: string
    ListOrganizationExpandedResponse:
      example:
        data:
        - ""
        - ""
      properties:
        data:
          items:
            allOf:
            - $ref: '#/components/schemas/OrganizationExpanded'
          type: array
      type: object
    OrganizationExpanded:
      allOf:
      - $ref: '#/components/schemas/Organization'
      - properties:
          totalStacks:
            type: integer
          totalUsers:
            type: integer
          owner:
            $ref: '#/components/schemas/User'
        type: object
      example:
        owner:
          role: USER
          id: id
          email: email
        defaultOrganizationAccess: NONE
        totalUsers: 5
        ownerId: ownerId
        totalStacks: 1
        createdAt: 2000-01-23T04:56:07.000+00:00
        defaultStackAccess: null
        domain: domain
        name: name
        id: id
        availableSandboxes: 6
        availableStacks: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
    ListRegionsResponse:
      example:
        data:
        - agentID: agentID
          creator:
            role: USER
            id: id
            email: email
          capabilities:
            EE:
            - EE
            - EE
            MODULE_LIST:
            - MODULE_LIST
            - MODULE_LIST
          clientID: clientID
          production: true
          creatorId: creatorId
          active: true
          lastPing: 2000-01-23T04:56:07.000+00:00
          secret:
            clear: clear
            lastDigits: lastDigits
          version: version
          organizationID: organizationID
          createdAt: createdAt
          baseUrl: baseUrl
          outdated: true
          public: true
          name: name
          id: id
        - agentID: agentID
          creator:
            role: USER
            id: id
            email: email
          capabilities:
            EE:
            - EE
            - EE
            MODULE_LIST:
            - MODULE_LIST
            - MODULE_LIST
          clientID: clientID
          production: true
          creatorId: creatorId
          active: true
          lastPing: 2000-01-23T04:56:07.000+00:00
          secret:
            clear: clear
            lastDigits: lastDigits
          version: version
          organizationID: organizationID
          createdAt: createdAt
          baseUrl: baseUrl
          outdated: true
          public: true
          name: name
          id: id
      properties:
        data:
          items:
            $ref: '#/components/schemas/AnyRegion'
          type: array
      required:
      - data
      type: object
    GetRegionResponse:
      example:
        data:
          agentID: agentID
          creator:
            role: USER
            id: id
            email: email
          capabilities:
            EE:
            - EE
            - EE
            MODULE_LIST:
            - MODULE_LIST
            - MODULE_LIST
          clientID: clientID
          production: true
          creatorId: creatorId
          active: true
          lastPing: 2000-01-23T04:56:07.000+00:00
          secret:
            clear: clear
            lastDigits: lastDigits
          version: version
          organizationID: organizationID
          createdAt: createdAt
          baseUrl: baseUrl
          outdated: true
          public: true
          name: name
          id: id
      properties:
        data:
          $ref: '#/components/schemas/AnyRegion'
      required:
      - data
      type: object
    ServerInfo:
      example:
        capabilities:
        - ""
        - ""
        consoleURL: consoleURL
        version: version
      properties:
        version:
          type: string
        capabilities:
          items:
            allOf:
            - $ref: '#/components/schemas/Capability'
          type: array
        consoleURL:
          type: string
      required:
      - version
      type: object
    Capability:
      enum:
      - MODULE_SELECTION
      type: string
    Version:
      example:
        versions:
          key: versions
        regionID: regionID
        name: name
      properties:
        name:
          type: string
        versions:
          additionalProperties:
            type: string
          type: object
        regionID:
          type: string
      required:
      - name
      - regionID
      - versions
      type: object
    UpdateOrganizationUserRequest:
      example:
        role: NONE
      properties:
        role:
          $ref: '#/components/schemas/Role'
      required:
      - role
      type: object
    UpdateStackUserRequest:
      example:
        role: NONE
      properties:
        role:
          $ref: '#/components/schemas/Role'
      required:
      - role
      type: object
    GetRegionVersionsResponse:
      example:
        data:
        - versions:
            key: versions
          regionID: regionID
          name: name
        - versions:
            key: versions
          regionID: regionID
          name: name
      properties:
        data:
          items:
            $ref: '#/components/schemas/Version'
          type: array
      required:
      - data
      type: object
    AuthenticationProviderData:
      oneOf:
      - $ref: '#/components/schemas/GoogleIDPConfig'
      - $ref: '#/components/schemas/MicrosoftIDPConfig'
      - $ref: '#/components/schemas/GithubIDPConfig'
      - $ref: '#/components/schemas/OIDCConfig'
      type: object
    BaseProviderConfig:
      properties:
        type:
          description: Type of the authentication provider
          enum:
          - oidc
          - google
          - github
          - microsoft
          type: string
        name:
          description: Name of the authentication provider
          type: string
        clientID:
          description: Client ID for the authentication provider
          type: string
        clientSecret:
          description: Client secret for the authentication provider
          type: string
      required:
      - clientID
      - clientSecret
      - name
      - type
      type: object
    AuthenticationProvider:
      allOf:
      - $ref: '#/components/schemas/AuthenticationProviderData'
      - properties:
          organizationId:
            description: Unique identifier for the authentication provider
            type: string
          createdAt:
            description: Creation date of the authentication provider
            format: date-time
            type: string
          updatedAt:
            description: Last update date of the authentication provider
            format: date-time
            type: string
        required:
        - createdAt
        - organizationId
        - updatedAt
        type: object
      type: object
    GoogleIDPConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - properties:
          config:
            $ref: '#/components/schemas/GoogleIDPConfig_allOf_config'
        required:
        - config
        type: object
      example:
        clientID: clientID
        name: name
        clientSecret: clientSecret
        type: oidc
        config: null
    MicrosoftIDPConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - properties:
          config:
            $ref: '#/components/schemas/MicrosoftIDPConfig_allOf_config'
        required:
        - config
        type: object
    GithubIDPConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - properties:
          config:
            $ref: '#/components/schemas/GoogleIDPConfig_allOf_config'
        required:
        - config
        type: object
    OIDCConfig:
      allOf:
      - $ref: '#/components/schemas/BaseProviderConfig'
      - properties:
          config:
            $ref: '#/components/schemas/OIDCConfig_allOf_config'
        required:
        - config
        type: object
    UpsertAuthenticationProviderRequest:
      $ref: '#/components/schemas/AuthenticationProviderData'
    AuthenticationProviderResponse:
      example:
        data:
          organizationId: organizationId
          redirectURI: redirectURI
          createdAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/AuthenticationProviderResponse_data'
      type: object
    listFeatures_200_response:
      example:
        data:
        - organizationID: organizationID
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
        - organizationID: organizationID
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrganizationFeature'
          type: array
      required:
      - data
      type: object
    addFeatures_request:
      properties:
        features:
          items:
            type: string
          type: array
      required:
      - features
      type: object
    LogCursor_data:
      allOf:
      - $ref: '#/components/schemas/Cursor'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Log'
            type: array
        type: object
      example:
        next: ""
        previous: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
        data:
        - organizationId: organizationId
          date: 2000-01-23T04:56:07.000+00:00
          data: "{}"
          action: action
          userId: userId
          seq: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
        - organizationId: organizationId
          date: 2000-01-23T04:56:07.000+00:00
          data: "{}"
          action: action
          userId: userId
          seq: 1e6f8b6e-1b6b-4b3b-8b3b-1b6b4b3b8b3b
        hasMore: false
        pageSize: 15
    ReadOrganizationClientsResponse_data:
      allOf:
      - $ref: '#/components/schemas/Cursor'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/OrganizationClient'
            type: array
        required:
        - data
        type: object
      example:
        next: ""
        previous: YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol=
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          secret:
            clear: clear
            lastDigits: lastDigits
        - createdAt: 2000-01-23T04:56:07.000+00:00
          description: description
          id: id
          secret:
            clear: clear
            lastDigits: lastDigits
        hasMore: false
        pageSize: 15
    OrganizationClient_secret:
      example:
        clear: clear
        lastDigits: lastDigits
      properties:
        lastDigits:
          type: string
        clear:
          type: string
      required:
      - lastDigits
      type: object
    GoogleIDPConfig_allOf_config:
      type: object
    MicrosoftIDPConfig_allOf_config:
      properties:
        tenant:
          default: common
          description: Tenant ID for Microsoft authentication
          type: string
      type: object
    OIDCConfig_allOf_config:
      properties:
        issuer:
          description: OIDC issuer URL
          type: string
        discoveryPath:
          default: /.well-known/openid-configuration
          type: string
      required:
      - issuer
      type: object
    AuthenticationProviderResponse_data:
      allOf:
      - $ref: '#/components/schemas/AuthenticationProvider'
      - properties:
          redirectURI:
            type: string
        required:
        - redirectURI
        type: object
      example:
        organizationId: organizationId
        redirectURI: redirectURI
        createdAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /authorize
          scopes:
            openid: Enable OIDC
            email: Ask email access
          tokenUrl: /oauth/token
      type: oauth2
