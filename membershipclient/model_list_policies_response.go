/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the ListPoliciesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPoliciesResponse{}

// ListPoliciesResponse struct for ListPoliciesResponse
type ListPoliciesResponse struct {
	Data []Policy `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPoliciesResponse ListPoliciesResponse

// NewListPoliciesResponse instantiates a new ListPoliciesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPoliciesResponse() *ListPoliciesResponse {
	this := ListPoliciesResponse{}
	return &this
}

// NewListPoliciesResponseWithDefaults instantiates a new ListPoliciesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPoliciesResponseWithDefaults() *ListPoliciesResponse {
	this := ListPoliciesResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListPoliciesResponse) GetData() []Policy {
	if o == nil || IsNil(o.Data) {
		var ret []Policy
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPoliciesResponse) GetDataOk() ([]Policy, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListPoliciesResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Policy and assigns it to the Data field.
func (o *ListPoliciesResponse) SetData(v []Policy) {
	o.Data = v
}

func (o ListPoliciesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPoliciesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPoliciesResponse) UnmarshalJSON(data []byte) (err error) {
	varListPoliciesResponse := _ListPoliciesResponse{}

	err = json.Unmarshal(data, &varListPoliciesResponse)

	if err != nil {
		return err
	}

	*o = ListPoliciesResponse(varListPoliciesResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPoliciesResponse struct {
	value *ListPoliciesResponse
	isSet bool
}

func (v NullableListPoliciesResponse) Get() *ListPoliciesResponse {
	return v.value
}

func (v *NullableListPoliciesResponse) Set(val *ListPoliciesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPoliciesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPoliciesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPoliciesResponse(val *ListPoliciesResponse) *NullableListPoliciesResponse {
	return &NullableListPoliciesResponse{value: val, isSet: true}
}

func (v NullableListPoliciesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPoliciesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


