/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PrivateRegion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateRegion{}

// PrivateRegion struct for PrivateRegion
type PrivateRegion struct {
	Id string `json:"id"`
	BaseUrl string `json:"baseUrl"`
	CreatedAt string `json:"createdAt"`
	Active bool `json:"active"`
	LastPing *time.Time `json:"lastPing,omitempty"`
	Name string `json:"name"`
	Capabilities RegionCapability `json:"capabilities"`
	AgentID string `json:"agentID"`
	Outdated bool `json:"outdated"`
	CreatorId *string `json:"creatorId,omitempty"`
	Version *string `json:"version,omitempty"`
	OrganizationID string `json:"organizationID"`
	CreatorID string `json:"creatorID"`
	Secret *PrivateRegionSecret `json:"secret,omitempty"`
}

type _PrivateRegion PrivateRegion

// NewPrivateRegion instantiates a new PrivateRegion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateRegion(id string, baseUrl string, createdAt string, active bool, name string, capabilities RegionCapability, agentID string, outdated bool, organizationID string, creatorID string) *PrivateRegion {
	this := PrivateRegion{}
	this.Id = id
	this.BaseUrl = baseUrl
	this.CreatedAt = createdAt
	this.Active = active
	this.Name = name
	this.Capabilities = capabilities
	this.AgentID = agentID
	this.Outdated = outdated
	this.OrganizationID = organizationID
	this.CreatorID = creatorID
	return &this
}

// NewPrivateRegionWithDefaults instantiates a new PrivateRegion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateRegionWithDefaults() *PrivateRegion {
	this := PrivateRegion{}
	return &this
}

// GetId returns the Id field value
func (o *PrivateRegion) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PrivateRegion) SetId(v string) {
	o.Id = v
}

// GetBaseUrl returns the BaseUrl field value
func (o *PrivateRegion) GetBaseUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseUrl
}

// GetBaseUrlOk returns a tuple with the BaseUrl field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetBaseUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseUrl, true
}

// SetBaseUrl sets field value
func (o *PrivateRegion) SetBaseUrl(v string) {
	o.BaseUrl = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PrivateRegion) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PrivateRegion) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetActive returns the Active field value
func (o *PrivateRegion) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *PrivateRegion) SetActive(v bool) {
	o.Active = v
}

// GetLastPing returns the LastPing field value if set, zero value otherwise.
func (o *PrivateRegion) GetLastPing() time.Time {
	if o == nil || IsNil(o.LastPing) {
		var ret time.Time
		return ret
	}
	return *o.LastPing
}

// GetLastPingOk returns a tuple with the LastPing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetLastPingOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastPing) {
		return nil, false
	}
	return o.LastPing, true
}

// HasLastPing returns a boolean if a field has been set.
func (o *PrivateRegion) HasLastPing() bool {
	if o != nil && !IsNil(o.LastPing) {
		return true
	}

	return false
}

// SetLastPing gets a reference to the given time.Time and assigns it to the LastPing field.
func (o *PrivateRegion) SetLastPing(v time.Time) {
	o.LastPing = &v
}

// GetName returns the Name field value
func (o *PrivateRegion) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PrivateRegion) SetName(v string) {
	o.Name = v
}

// GetCapabilities returns the Capabilities field value
func (o *PrivateRegion) GetCapabilities() RegionCapability {
	if o == nil {
		var ret RegionCapability
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetCapabilitiesOk() (*RegionCapability, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *PrivateRegion) SetCapabilities(v RegionCapability) {
	o.Capabilities = v
}

// GetAgentID returns the AgentID field value
func (o *PrivateRegion) GetAgentID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentID
}

// GetAgentIDOk returns a tuple with the AgentID field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetAgentIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentID, true
}

// SetAgentID sets field value
func (o *PrivateRegion) SetAgentID(v string) {
	o.AgentID = v
}

// GetOutdated returns the Outdated field value
func (o *PrivateRegion) GetOutdated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Outdated
}

// GetOutdatedOk returns a tuple with the Outdated field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetOutdatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Outdated, true
}

// SetOutdated sets field value
func (o *PrivateRegion) SetOutdated(v bool) {
	o.Outdated = v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *PrivateRegion) GetCreatorId() string {
	if o == nil || IsNil(o.CreatorId) {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetCreatorIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorId) {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *PrivateRegion) HasCreatorId() bool {
	if o != nil && !IsNil(o.CreatorId) {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *PrivateRegion) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PrivateRegion) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PrivateRegion) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *PrivateRegion) SetVersion(v string) {
	o.Version = &v
}

// GetOrganizationID returns the OrganizationID field value
func (o *PrivateRegion) GetOrganizationID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetOrganizationIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationID, true
}

// SetOrganizationID sets field value
func (o *PrivateRegion) SetOrganizationID(v string) {
	o.OrganizationID = v
}

// GetCreatorID returns the CreatorID field value
func (o *PrivateRegion) GetCreatorID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatorID
}

// GetCreatorIDOk returns a tuple with the CreatorID field value
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetCreatorIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorID, true
}

// SetCreatorID sets field value
func (o *PrivateRegion) SetCreatorID(v string) {
	o.CreatorID = v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *PrivateRegion) GetSecret() PrivateRegionSecret {
	if o == nil || IsNil(o.Secret) {
		var ret PrivateRegionSecret
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateRegion) GetSecretOk() (*PrivateRegionSecret, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *PrivateRegion) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given PrivateRegionSecret and assigns it to the Secret field.
func (o *PrivateRegion) SetSecret(v PrivateRegionSecret) {
	o.Secret = &v
}

func (o PrivateRegion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateRegion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["baseUrl"] = o.BaseUrl
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["active"] = o.Active
	if !IsNil(o.LastPing) {
		toSerialize["lastPing"] = o.LastPing
	}
	toSerialize["name"] = o.Name
	toSerialize["capabilities"] = o.Capabilities
	toSerialize["agentID"] = o.AgentID
	toSerialize["outdated"] = o.Outdated
	if !IsNil(o.CreatorId) {
		toSerialize["creatorId"] = o.CreatorId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	toSerialize["organizationID"] = o.OrganizationID
	toSerialize["creatorID"] = o.CreatorID
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	return toSerialize, nil
}

func (o *PrivateRegion) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"baseUrl",
		"createdAt",
		"active",
		"name",
		"capabilities",
		"agentID",
		"outdated",
		"organizationID",
		"creatorID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPrivateRegion := _PrivateRegion{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPrivateRegion)

	if err != nil {
		return err
	}

	*o = PrivateRegion(varPrivateRegion)

	return err
}

type NullablePrivateRegion struct {
	value *PrivateRegion
	isSet bool
}

func (v NullablePrivateRegion) Get() *PrivateRegion {
	return v.value
}

func (v *NullablePrivateRegion) Set(val *PrivateRegion) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateRegion) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateRegion(val *PrivateRegion) *NullablePrivateRegion {
	return &NullablePrivateRegion{value: val, isSet: true}
}

func (v NullablePrivateRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


