openapi: 3.0.3
info:
  contact: {}
  title: Membership API
  version: 0.1.0
servers:
- description: Local server
  url: http://localhost:8080
security:
- oauth2: []
paths:
  /organizations:
    get:
      operationId: listOrganizations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationResponse'
          description: List of organizations
      summary: List organizations of the connected user
    post:
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
          description: Organization created
      summary: Create organization
  /organizations/expanded:
    get:
      operationId: listOrganizationsExpanded
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationExpandedResponse'
          description: List of organizations with expanded data
      summary: List organizations of the connected user with expanded data
  /organizations/{organizationId}:
    delete:
      operationId: deleteOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Organization deleted
      summary: Delete organization
    get:
      operationId: readOrganization
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationResponse'
          description: OK
      summary: Read organization
  /organizations/{organizationId}/stacks:
    get:
      operationId: listStacks
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStacksResponse'
          description: List of stacks
      summary: List stacks
    post:
      operationId: createStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStackRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStackResponse'
          description: Created stack
      summary: Create stack
  /organizations/{organizationId}/stacks/{stackId}:
    delete:
      operationId: deleteStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Stack deleted
      summary: Delete stack
    get:
      operationId: readStack
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stackId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadStackResponse'
          description: OK
      summary: Read stack
  /me/invitations:
    get:
      operationId: listInvitations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
          description: List of the invitations for the connected user
      summary: List invitations of the user
  /me/invitations/{invitationId}/accept:
    post:
      operationId: acceptInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation accepted
      summary: Accept invitation
  /me/invitations/{invitationId}/reject:
    post:
      operationId: declineInvitation
      parameters:
      - explode: false
        in: path
        name: invitationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Invitation declined
      summary: Decline invitation
  /organizations/{organizationId}/invitations:
    get:
      operationId: listOrganizationInvitations
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
          description: List of the invitations for the organization
      summary: List invitations of the organization
    post:
      operationId: createInvitation
      parameters:
      - explode: false
        in: path
        name: organizationId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitationResponse'
          description: Invitation created
      summary: Create invitation
components:
  schemas:
    OrganizationData:
      example:
        name: name
      properties:
        name:
          description: Organization name
          type: string
      required:
      - name
      type: object
    Organization:
      allOf:
      - $ref: '#/components/schemas/OrganizationData'
      - $ref: '#/components/schemas/Organization_allOf'
    StackData:
      example:
        name: name
        region: eu-west-1
      properties:
        name:
          description: Stack name
          type: string
        region:
          default: eu-west-1
          description: Region
          type: string
      required:
      - name
      type: object
    Stack:
      allOf:
      - $ref: '#/components/schemas/StackData'
      - $ref: '#/components/schemas/Stack_allOf'
    OrganizationArray:
      items:
        $ref: '#/components/schemas/Organization'
      type: array
    StackArray:
      items:
        $ref: '#/components/schemas/Stack'
      type: array
    ListOrganizationResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      type: object
    CreateOrganizationRequest:
      $ref: '#/components/schemas/OrganizationData'
    CreateOrganizationResponse:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/Organization'
      type: object
    ReadOrganizationResponse:
      $ref: '#/components/schemas/CreateOrganizationResponse'
    ListStacksResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/Stack'
          type: array
      type: object
    CreateStackRequest:
      $ref: '#/components/schemas/StackData'
    CreateStackResponse:
      example:
        data: null
      properties:
        data:
          $ref: '#/components/schemas/Stack'
      type: object
    ReadStackResponse:
      $ref: '#/components/schemas/CreateStackResponse'
    ListInvitationsResponse:
      example:
        data:
        - organizationId: organizationId
          userEmail: userEmail
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          status: pending
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - organizationId: organizationId
          userEmail: userEmail
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          status: pending
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/Invitation'
          type: array
      type: object
    CreateInvitationResponse:
      example:
        data:
          organizationId: organizationId
          userEmail: userEmail
          id: id
          creationDate: 2000-01-23T04:56:07.000+00:00
          status: pending
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Invitation'
      type: object
    Invitation:
      example:
        organizationId: organizationId
        userEmail: userEmail
        id: id
        creationDate: 2000-01-23T04:56:07.000+00:00
        status: pending
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        organizationId:
          type: string
        userEmail:
          type: string
        status:
          enum:
          - pending
          - accepted
          - rejected
          type: string
        creationDate:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - creationDate
      - id
      - organizationId
      - status
      - userEmail
      type: object
    ListOrganizationExpandedResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/ListOrganizationExpandedResponse_data_inner'
          type: array
      type: object
    Organization_allOf:
      properties:
        id:
          description: Organization ID
          type: string
        ownerId:
          description: Owner ID
          type: string
      required:
      - id
      - ownerId
      type: object
      example: null
    Stack_allOf:
      properties:
        id:
          description: Stack ID
          type: string
        organizationId:
          description: Organization ID
          type: string
      required:
      - id
      - organizationId
      type: object
      example: null
    ListOrganizationExpandedResponse_data_inner_allOf:
      properties:
        totalStacks:
          type: integer
        totalUsers:
          type: integer
      type: object
    ListOrganizationExpandedResponse_data_inner:
      allOf:
      - $ref: '#/components/schemas/Organization'
      - $ref: '#/components/schemas/ListOrganizationExpandedResponse_data_inner_allOf'
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /authorize
          scopes:
            openid: Enable OIDC
            email: Ask email access
          tokenUrl: /oauth/token
      type: oauth2
