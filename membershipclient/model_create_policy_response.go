/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the CreatePolicyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePolicyResponse{}

// CreatePolicyResponse struct for CreatePolicyResponse
type CreatePolicyResponse struct {
	Data *Policy `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreatePolicyResponse CreatePolicyResponse

// NewCreatePolicyResponse instantiates a new CreatePolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePolicyResponse() *CreatePolicyResponse {
	this := CreatePolicyResponse{}
	return &this
}

// NewCreatePolicyResponseWithDefaults instantiates a new CreatePolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePolicyResponseWithDefaults() *CreatePolicyResponse {
	this := CreatePolicyResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *CreatePolicyResponse) GetData() Policy {
	if o == nil || IsNil(o.Data) {
		var ret Policy
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePolicyResponse) GetDataOk() (*Policy, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CreatePolicyResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given Policy and assigns it to the Data field.
func (o *CreatePolicyResponse) SetData(v Policy) {
	o.Data = &v
}

func (o CreatePolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePolicyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreatePolicyResponse) UnmarshalJSON(data []byte) (err error) {
	varCreatePolicyResponse := _CreatePolicyResponse{}

	err = json.Unmarshal(data, &varCreatePolicyResponse)

	if err != nil {
		return err
	}

	*o = CreatePolicyResponse(varCreatePolicyResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreatePolicyResponse struct {
	value *CreatePolicyResponse
	isSet bool
}

func (v NullableCreatePolicyResponse) Get() *CreatePolicyResponse {
	return v.value
}

func (v *NullableCreatePolicyResponse) Set(val *CreatePolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePolicyResponse(val *CreatePolicyResponse) *NullableCreatePolicyResponse {
	return &NullableCreatePolicyResponse{value: val, isSet: true}
}

func (v NullableCreatePolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


