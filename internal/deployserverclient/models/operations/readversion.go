// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/formancehq/fctl/internal/deployserverclient/models/components"
	"io"
)

type ReadVersionRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (r *ReadVersionRequest) GetID() string {
	if r == nil {
		return ""
	}
	return r.ID
}

type ReadVersionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// version retrieved successfully
	AppVersionResponse *components.AppVersionResponse
	// version retrieved successfully
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	TwoHundredApplicationGzipResponseStream io.ReadCloser
	// version retrieved successfully
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	TwoHundredApplicationYamlResponseStream io.ReadCloser
	// Error
	Error *components.Error
}

func (r *ReadVersionResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *ReadVersionResponse) GetAppVersionResponse() *components.AppVersionResponse {
	if r == nil {
		return nil
	}
	return r.AppVersionResponse
}

func (r *ReadVersionResponse) GetTwoHundredApplicationGzipResponseStream() io.ReadCloser {
	if r == nil {
		return nil
	}
	return r.TwoHundredApplicationGzipResponseStream
}

func (r *ReadVersionResponse) GetTwoHundredApplicationYamlResponseStream() io.ReadCloser {
	if r == nil {
		return nil
	}
	return r.TwoHundredApplicationYamlResponseStream
}

func (r *ReadVersionResponse) GetError() *components.Error {
	if r == nil {
		return nil
	}
	return r.Error
}
