/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateOrganizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationRequest{}

// CreateOrganizationRequest struct for CreateOrganizationRequest
type CreateOrganizationRequest struct {
	// Organization name
	Name string `json:"name"`
	// Organization domain
	Domain *string `json:"domain,omitempty"`
	// Default policy ID applied to new users
	DefaultPolicyID *int32 `json:"defaultPolicyID,omitempty"`
	// User ID of the owner of the organization (only when used with a non user agent)
	OwnerID *string `json:"ownerID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateOrganizationRequest CreateOrganizationRequest

// NewCreateOrganizationRequest instantiates a new CreateOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationRequest(name string) *CreateOrganizationRequest {
	this := CreateOrganizationRequest{}
	this.Name = name
	return &this
}

// NewCreateOrganizationRequestWithDefaults instantiates a new CreateOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationRequestWithDefaults() *CreateOrganizationRequest {
	this := CreateOrganizationRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateOrganizationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrganizationRequest) SetName(v string) {
	o.Name = v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *CreateOrganizationRequest) SetDomain(v string) {
	o.Domain = &v
}

// GetDefaultPolicyID returns the DefaultPolicyID field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetDefaultPolicyID() int32 {
	if o == nil || IsNil(o.DefaultPolicyID) {
		var ret int32
		return ret
	}
	return *o.DefaultPolicyID
}

// GetDefaultPolicyIDOk returns a tuple with the DefaultPolicyID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetDefaultPolicyIDOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultPolicyID) {
		return nil, false
	}
	return o.DefaultPolicyID, true
}

// HasDefaultPolicyID returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasDefaultPolicyID() bool {
	if o != nil && !IsNil(o.DefaultPolicyID) {
		return true
	}

	return false
}

// SetDefaultPolicyID gets a reference to the given int32 and assigns it to the DefaultPolicyID field.
func (o *CreateOrganizationRequest) SetDefaultPolicyID(v int32) {
	o.DefaultPolicyID = &v
}

// GetOwnerID returns the OwnerID field value if set, zero value otherwise.
func (o *CreateOrganizationRequest) GetOwnerID() string {
	if o == nil || IsNil(o.OwnerID) {
		var ret string
		return ret
	}
	return *o.OwnerID
}

// GetOwnerIDOk returns a tuple with the OwnerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRequest) GetOwnerIDOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerID) {
		return nil, false
	}
	return o.OwnerID, true
}

// HasOwnerID returns a boolean if a field has been set.
func (o *CreateOrganizationRequest) HasOwnerID() bool {
	if o != nil && !IsNil(o.OwnerID) {
		return true
	}

	return false
}

// SetOwnerID gets a reference to the given string and assigns it to the OwnerID field.
func (o *CreateOrganizationRequest) SetOwnerID(v string) {
	o.OwnerID = &v
}

func (o CreateOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.DefaultPolicyID) {
		toSerialize["defaultPolicyID"] = o.DefaultPolicyID
	}
	if !IsNil(o.OwnerID) {
		toSerialize["ownerID"] = o.OwnerID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateOrganizationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationRequest := _CreateOrganizationRequest{}

	err = json.Unmarshal(data, &varCreateOrganizationRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationRequest(varCreateOrganizationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "domain")
		delete(additionalProperties, "defaultPolicyID")
		delete(additionalProperties, "ownerID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateOrganizationRequest struct {
	value *CreateOrganizationRequest
	isSet bool
}

func (v NullableCreateOrganizationRequest) Get() *CreateOrganizationRequest {
	return v.value
}

func (v *NullableCreateOrganizationRequest) Set(val *CreateOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationRequest(val *CreateOrganizationRequest) *NullableCreateOrganizationRequest {
	return &NullableCreateOrganizationRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


