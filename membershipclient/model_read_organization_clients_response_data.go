/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"fmt"
)

// checks if the ReadOrganizationClientsResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadOrganizationClientsResponseData{}

// ReadOrganizationClientsResponseData struct for ReadOrganizationClientsResponseData
type ReadOrganizationClientsResponseData struct {
	PageSize int64 `json:"pageSize"`
	HasMore bool `json:"hasMore"`
	Previous *string `json:"previous,omitempty"`
	Next *string `json:"next,omitempty"`
	Data []OrganizationClient `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _ReadOrganizationClientsResponseData ReadOrganizationClientsResponseData

// NewReadOrganizationClientsResponseData instantiates a new ReadOrganizationClientsResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadOrganizationClientsResponseData(pageSize int64, hasMore bool, data []OrganizationClient) *ReadOrganizationClientsResponseData {
	this := ReadOrganizationClientsResponseData{}
	this.PageSize = pageSize
	this.HasMore = hasMore
	this.Data = data
	return &this
}

// NewReadOrganizationClientsResponseDataWithDefaults instantiates a new ReadOrganizationClientsResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadOrganizationClientsResponseDataWithDefaults() *ReadOrganizationClientsResponseData {
	this := ReadOrganizationClientsResponseData{}
	return &this
}

// GetPageSize returns the PageSize field value
func (o *ReadOrganizationClientsResponseData) GetPageSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *ReadOrganizationClientsResponseData) GetPageSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *ReadOrganizationClientsResponseData) SetPageSize(v int64) {
	o.PageSize = v
}

// GetHasMore returns the HasMore field value
func (o *ReadOrganizationClientsResponseData) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *ReadOrganizationClientsResponseData) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *ReadOrganizationClientsResponseData) SetHasMore(v bool) {
	o.HasMore = v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *ReadOrganizationClientsResponseData) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadOrganizationClientsResponseData) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *ReadOrganizationClientsResponseData) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *ReadOrganizationClientsResponseData) SetPrevious(v string) {
	o.Previous = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *ReadOrganizationClientsResponseData) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadOrganizationClientsResponseData) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *ReadOrganizationClientsResponseData) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *ReadOrganizationClientsResponseData) SetNext(v string) {
	o.Next = &v
}

// GetData returns the Data field value
func (o *ReadOrganizationClientsResponseData) GetData() []OrganizationClient {
	if o == nil {
		var ret []OrganizationClient
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ReadOrganizationClientsResponseData) GetDataOk() ([]OrganizationClient, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ReadOrganizationClientsResponseData) SetData(v []OrganizationClient) {
	o.Data = v
}

func (o ReadOrganizationClientsResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadOrganizationClientsResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pageSize"] = o.PageSize
	toSerialize["hasMore"] = o.HasMore
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ReadOrganizationClientsResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pageSize",
		"hasMore",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReadOrganizationClientsResponseData := _ReadOrganizationClientsResponseData{}

	err = json.Unmarshal(data, &varReadOrganizationClientsResponseData)

	if err != nil {
		return err
	}

	*o = ReadOrganizationClientsResponseData(varReadOrganizationClientsResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "hasMore")
		delete(additionalProperties, "previous")
		delete(additionalProperties, "next")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableReadOrganizationClientsResponseData struct {
	value *ReadOrganizationClientsResponseData
	isSet bool
}

func (v NullableReadOrganizationClientsResponseData) Get() *ReadOrganizationClientsResponseData {
	return v.value
}

func (v *NullableReadOrganizationClientsResponseData) Set(val *ReadOrganizationClientsResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableReadOrganizationClientsResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableReadOrganizationClientsResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadOrganizationClientsResponseData(val *ReadOrganizationClientsResponseData) *NullableReadOrganizationClientsResponseData {
	return &NullableReadOrganizationClientsResponseData{value: val, isSet: true}
}

func (v NullableReadOrganizationClientsResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadOrganizationClientsResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


