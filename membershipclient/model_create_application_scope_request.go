/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateApplicationScopeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationScopeRequest{}

// CreateApplicationScopeRequest struct for CreateApplicationScopeRequest
type CreateApplicationScopeRequest struct {
	// Scope description
	Description *string `json:"description,omitempty"`
	// The OAuth2 scope label (e.g., \"custom:read\")
	Label string `json:"label"`
	AdditionalProperties map[string]interface{}
}

type _CreateApplicationScopeRequest CreateApplicationScopeRequest

// NewCreateApplicationScopeRequest instantiates a new CreateApplicationScopeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationScopeRequest(label string) *CreateApplicationScopeRequest {
	this := CreateApplicationScopeRequest{}
	this.Label = label
	return &this
}

// NewCreateApplicationScopeRequestWithDefaults instantiates a new CreateApplicationScopeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationScopeRequestWithDefaults() *CreateApplicationScopeRequest {
	this := CreateApplicationScopeRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateApplicationScopeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateApplicationScopeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateApplicationScopeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateApplicationScopeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLabel returns the Label field value
func (o *CreateApplicationScopeRequest) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationScopeRequest) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CreateApplicationScopeRequest) SetLabel(v string) {
	o.Label = v
}

func (o CreateApplicationScopeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationScopeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["label"] = o.Label

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateApplicationScopeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApplicationScopeRequest := _CreateApplicationScopeRequest{}

	err = json.Unmarshal(data, &varCreateApplicationScopeRequest)

	if err != nil {
		return err
	}

	*o = CreateApplicationScopeRequest(varCreateApplicationScopeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "label")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateApplicationScopeRequest struct {
	value *CreateApplicationScopeRequest
	isSet bool
}

func (v NullableCreateApplicationScopeRequest) Get() *CreateApplicationScopeRequest {
	return v.value
}

func (v *NullableCreateApplicationScopeRequest) Set(val *CreateApplicationScopeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationScopeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationScopeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationScopeRequest(val *CreateApplicationScopeRequest) *NullableCreateApplicationScopeRequest {
	return &NullableCreateApplicationScopeRequest{value: val, isSet: true}
}

func (v NullableCreateApplicationScopeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationScopeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


